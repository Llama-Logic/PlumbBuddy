// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlumbBuddy.Data;

#nullable disable

namespace PlumbBuddy.Data.Migrations
{
    [DbContext(typeof(PbDbContext))]
    partial class PbDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("IntentionalOverrideModFileHash", b =>
                {
                    b.Property<long>("IntentionalOverridesModFilesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ModFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IntentionalOverridesModFilesId", "ModFilesId");

                    b.HasIndex("ModFilesId");

                    b.ToTable("IntentionalOverrideModFileHash");
                });

            modelBuilder.Entity("ModCreatorModManifest", b =>
                {
                    b.Property<long>("AttributedModsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatorsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttributedModsId", "CreatorsId");

                    b.HasIndex("CreatorsId");

                    b.ToTable("ModCreatorModManifest");
                });

            modelBuilder.Entity("ModCreatorRequiredMod", b =>
                {
                    b.Property<long>("AttributedRequiredModsId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("CreatorsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AttributedRequiredModsId", "CreatorsId");

                    b.HasIndex("CreatorsId");

                    b.ToTable("ModCreatorRequiredMod");
                });

            modelBuilder.Entity("ModFileHashModManifest", b =>
                {
                    b.Property<long>("ModManifestSubsumedFilesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("SubsumedFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ModManifestSubsumedFilesId", "SubsumedFilesId");

                    b.HasIndex("SubsumedFilesId");

                    b.ToTable("ModFileHashModManifest");
                });

            modelBuilder.Entity("ModFileHashRequiredMod", b =>
                {
                    b.Property<long>("FilesId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("RequiredModFilesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("FilesId", "RequiredModFilesId");

                    b.HasIndex("RequiredModFilesId");

                    b.ToTable("ModFileHashRequiredMod");
                });

            modelBuilder.Entity("PlumbBuddy.Data.FileOfInterest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FileType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Path");

                    b.ToTable("FilesOfInterest");
                });

            modelBuilder.Entity("PlumbBuddy.Data.IntentionalOverride", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("KeyFullInstance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyGroup")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ModManfiestId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ModManifestKeyFullInstance")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModManifestKeyGroup")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ModManifestKeyType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ModVersion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModManfiestId");

                    b.ToTable("IntentionalOverrides");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModCreator", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("ModCreators");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("AbsenceNoticed")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("Creation")
                        .HasColumnType("TEXT");

                    b.Property<int>("FileType")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LastWrite")
                        .HasColumnType("TEXT");

                    b.Property<long>("ModFileHashId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ModManifestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .HasColumnType("TEXT");

                    b.Property<long?>("Size")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModFileHashId");

                    b.HasIndex("ModManifestId");

                    b.HasIndex("Path");

                    b.HasIndex("Path", "Creation", "LastWrite", "Size");

                    b.ToTable("ModFiles");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFileHash", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Sha256")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("BLOB")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("Sha256")
                        .IsUnique();

                    b.ToTable("ModFileHashes");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFileResource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("KeyFullInstance")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyGroup")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KeyType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ModFileId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModFileId");

                    b.ToTable("ModFileResources");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModManifest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ModManifests");
                });

            modelBuilder.Entity("PlumbBuddy.Data.RequiredMod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ManifestKeyFullInstance")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ManifestKeyGroup")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ManifestKeyType")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ModManfiestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasColumnType("TEXT");

                    b.Property<string>("Version")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModManfiestId");

                    b.ToTable("RequiredMods");
                });

            modelBuilder.Entity("IntentionalOverrideModFileHash", b =>
                {
                    b.HasOne("PlumbBuddy.Data.IntentionalOverride", null)
                        .WithMany()
                        .HasForeignKey("IntentionalOverridesModFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.ModFileHash", null)
                        .WithMany()
                        .HasForeignKey("ModFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModCreatorModManifest", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModManifest", null)
                        .WithMany()
                        .HasForeignKey("AttributedModsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.ModCreator", null)
                        .WithMany()
                        .HasForeignKey("CreatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModCreatorRequiredMod", b =>
                {
                    b.HasOne("PlumbBuddy.Data.RequiredMod", null)
                        .WithMany()
                        .HasForeignKey("AttributedRequiredModsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.ModCreator", null)
                        .WithMany()
                        .HasForeignKey("CreatorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModFileHashModManifest", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModManifest", null)
                        .WithMany()
                        .HasForeignKey("ModManifestSubsumedFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.ModFileHash", null)
                        .WithMany()
                        .HasForeignKey("SubsumedFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModFileHashRequiredMod", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModFileHash", null)
                        .WithMany()
                        .HasForeignKey("FilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.RequiredMod", null)
                        .WithMany()
                        .HasForeignKey("RequiredModFilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlumbBuddy.Data.IntentionalOverride", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModManifest", "ModManifest")
                        .WithMany("IntentionalOverrides")
                        .HasForeignKey("ModManfiestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModManifest");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFile", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModFileHash", "ModFileHash")
                        .WithMany("ModFiles")
                        .HasForeignKey("ModFileHashId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlumbBuddy.Data.ModManifest", "ModManifest")
                        .WithMany()
                        .HasForeignKey("ModManifestId");

                    b.Navigation("ModFileHash");

                    b.Navigation("ModManifest");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFileResource", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModFile", "ModFile")
                        .WithMany("Resources")
                        .HasForeignKey("ModFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModFile");
                });

            modelBuilder.Entity("PlumbBuddy.Data.RequiredMod", b =>
                {
                    b.HasOne("PlumbBuddy.Data.ModManifest", "ModManifest")
                        .WithMany("RequiredMods")
                        .HasForeignKey("ModManfiestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModManifest");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFile", b =>
                {
                    b.Navigation("Resources");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModFileHash", b =>
                {
                    b.Navigation("ModFiles");
                });

            modelBuilder.Entity("PlumbBuddy.Data.ModManifest", b =>
                {
                    b.Navigation("IntentionalOverrides");

                    b.Navigation("RequiredMods");
                });
#pragma warning restore 612, 618
        }
    }
}
