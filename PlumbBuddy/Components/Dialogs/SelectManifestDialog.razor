@inject IMarkupLocalizer<AppText> MarkupLocalizer
@inject IStringLocalizer<AppText> StringLocalizer

<MudDialog Class="tertiary-dialog">
    <TitleContent>
        <MudStack Row="true">
            <MudIcon Icon="@MaterialDesignIcons.Normal.TagMultiple" Color="Color.Tertiary" />
            <MudTextM3 Typo="TypoM3.Title" Color="Color.Tertiary">
                @MarkupLocalizer[nameof(AppText.SelectManifestDialog_Caption)]
            </MudTextM3>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudStack>
            @if (Manifests is not null)
                foreach (var (key, manifest) in Manifests)
                {
                    <MudCard Class="@(key == selectedResourceKey ? "mud-background-tertiary-selected" : "mud-background")">
                        <MudCardHeader>
                            <MudTextM3 Typo="TypoM3.Title" Size="Size.Small">
                                @manifest.Name
                            </MudTextM3>
                        </MudCardHeader>
                        <MudCardContent>
                            <MudStack>
                                <MudField Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@MaterialDesignIcons.Normal.Key" AdornmentColor="Color.Tertiary" Label="@StringLocalizer[nameof(AppText.SelectManifestDialog_ResourceKey_Label)]">
                                    @key.ToString()
                                </MudField>
                                <MudField Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@MaterialDesignIcons.Normal.Identifier" AdornmentColor="Color.Tertiary" Label="@StringLocalizer[nameof(AppText.SelectManifestDialog_DecimalInstance_Label)]">
                                    @key.FullInstance.ToString()
                                </MudField>
                                <MudField Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@MaterialDesignIcons.Normal.IdCard" AdornmentColor="Color.Tertiary" Label="@StringLocalizer[nameof(AppText.SelectManifestDialog_TuningResourceName_Label)]">
                                    @manifest.TuningName
                                </MudField>
                                <MudField Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentIcon="@MaterialDesignIcons.Normal.BarcodeScan" AdornmentColor="Color.Tertiary" Label="@StringLocalizer[nameof(AppText.SelectManifestDialog_Hash_Label)]">
                                    @manifest.Hash.ToHexString()
                                </MudField>
                            </MudStack>
                        </MudCardContent>
                        <MudCardActions>
                            <MudButton Variant="Variant.Text" StartIcon="@(key == selectedResourceKey ? MaterialDesignIcons.Normal.CheckboxMarked : MaterialDesignIcons.Normal.CheckboxBlank)" Color="Color.Tertiary" OnClick="@(() => selectedResourceKey = key)" Disabled="@(key == selectedResourceKey)">
                                @(key == selectedResourceKey ? MarkupLocalizer[nameof(AppText.Common_Selected)] : MarkupLocalizer[nameof(AppText.Common_Select)])
                            </MudButton>
                        </MudCardActions>
                    </MudCard>
                }
        </MudStack>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CancelOnClickHandler">
            @MarkupLocalizer[nameof(AppText.Common_Cancel)]
        </MudButton>
        <MudButton Color="Color.Tertiary" OnClick="OkOnClickHandler">
            @MarkupLocalizer[nameof(AppText.Common_Ok)]
        </MudButton>
    </DialogActions>
</MudDialog>
