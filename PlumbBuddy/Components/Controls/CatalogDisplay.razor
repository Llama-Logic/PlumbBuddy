@implements IDisposable
@inject IDialogService DialogService
@inject IDbContextFactory<PbDbContext> PbDbContextFactory
@inject ILogger<CatalogDisplay> Logger
@inject IMarkupLocalizer<AppText> MarkupLocalizer
@inject IModsDirectoryCataloger ModsDirectoryCataloger
@inject IPlatformFunctions PlatformFunctions
@inject IPublicCatalogs PublicCatalogs
@inject ISettings Settings;
@inject ISmartSimObserver SmartSimObserver
@inject IStringLocalizer<AppText> StringLocalizer

<MudGrid Justify="Justify.Center" Class="align-center">
    <MudItem Class="flex-grow-1">
        <MudPaper Outlined>
			<MudAlert Severity="Severity.Info">@MarkupLocalizer[nameof(AppText.CatalogDisplay_UserAssistanceNote)]</MudAlert>
		</MudPaper>
    </MudItem>
    <MudItem>
        <MudTextField T="string" @bind-Value="@ModsSearchText" Variant="Variant.Filled" Label="@StringLocalizer[nameof(AppText.CatalogDisplay_SearchCatalog)]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" ShrinkLabel Immediate Clearable DebounceInterval="250" />
    </MudItem>
    <MudFlexBreak />
    <MudItem xs="4">
        <div class="catalog-list overflow-y-auto rounded mud-paper-outlined">
            <MudList T="ModKey" @bind-SelectedValue="@selectedModKey">
                @if (mods is not null)
                    foreach (var (modKey, modValue) in mods.Where(kv => IncludeMod(kv)).OrderBy(kv => kv.Key.Name).ThenBy(kv => kv.Key.Creators ?? kv.Key.Url?.ToString()))
                    {
                        <MudListItem T="ModKey" Value="@modKey" Text="@modKey.Name" SecondaryText="@(modKey.Creators ?? modKey.Url?.ToString())" Icon="@MaterialDesignIcons.Normal.Puzzle" />
                    }
            </MudList>
        </div>
    </MudItem>
    <MudItem xs="8">
        <div class="catalog-details overflow-y-auto rounded mud-paper-outlined pa-4">
            <MudGrid Justify="Justify.Center" Spacing="1">
                @if (selectedModKey is not null && (mods?.TryGetValue(selectedModKey, out var selectedMod) ?? false))
                {
                    var version = selectedMod.Select(t => t.manifest.Version).Where(v => !string.IsNullOrWhiteSpace(v)).Cast<string>().GroupBy(v => v).OrderByDescending(g => g.Key)?.FirstOrDefault()?.Key;
                    var hashHex = selectedMod.Select(t => t.manifest.Hash).First().ToHexString();
                    var requiredPackCodes = selectedMod.SelectMany(t => t.manifest.RequiredPacks).Select(pc => pc.ToUpperInvariant()).Distinct().Order().ToImmutableArray();
                    var incompatiblePackCodes = selectedMod.SelectMany(t => t.manifest.IncompatiblePacks).Select(pc => pc.ToUpperInvariant()).Distinct().Order().ToImmutableArray();
                    var installedPackCodes = SmartSimObserver.InstalledPackCodes.ToImmutableHashSet();
                    var creators = selectedMod.SelectMany(t => t.manifest.Creators).Distinct().ToImmutableArray();
                    var files = selectedMod.SelectMany(t => t.files).DistinctBy(fi => fi.FullName).OrderBy(fi => fi.FullName).ToImmutableArray();
                    var dependencies = selectedMod.SelectMany(t => t.dependencies).Distinct().OrderBy(k => k.Name).ThenBy(k => k.Creators ?? k.Url?.ToString() ?? string.Empty).ToImmutableArray();
                    var indexableDependents = selectedMod.SelectMany(t => t.dependents).Distinct().Where(mods.ContainsKey).OrderBy(k => k.Name).ThenBy(k => k.Creators ?? k.Url?.ToString() ?? string.Empty).ToImmutableArray();
                    <MudItem Style="text-align: center;">
                        <MudTextM3 Typo="TypoM3.Headline">
                            @(selectedModKey.Name)
                            @if (!string.IsNullOrWhiteSpace(version))
                            {
                                <small>&#x20;@version</small>
                            }
                        </MudTextM3>
                    </MudItem>
                    <MudFlexBreak />
                    @if (selectedModKey.Url is { } url)
                    {
                        <MudItem>
                            <MudLink Href="@url.ToString()">@url</MudLink>
                        </MudItem>
                    }
                    <MudFlexBreak />
                    @if (creators.Length is > 0)
                    {
                        <MudItem>
                            <MudStack Row Spacing="0">
                                @foreach (var creator in creators)
                                {
                                    <MudChip T="string" Text="@creator" Icon="@MaterialDesignIcons.Normal.Account" Color="Color.Primary" />
                                }
                            </MudStack>
                        </MudItem>
                        <MudFlexBreak />
                    }
                    <MudItem>
                        <MudStack Row>
                            <MudTooltip Arrow Text="@StringLocalizer["CatalogDisplay_AskForHelp_Tip", selectedModKey.Name]" Color="Color.Info">
                                <MudButton Variant="Variant.Filled" Size="Size.Small" OnClick="@(() => DialogService.ShowAskForHelpDialogAsync(Logger, PublicCatalogs, forCreators: creators, forManifestHashHex: hashHex))" StartIcon="@MaterialDesignIcons.Normal.FaceAgent" Color="Color.Info">@MarkupLocalizer[nameof(AppText.CatalogDisplay_AskForHelp)]</MudButton>
                            </MudTooltip>
                            @foreach (var requiredPackCode in requiredPackCodes)
                            {
                                <MudTooltip Arrow Text="@(StringLocalizer[installedPackCodes.Contains(requiredPackCode) ? "CatalogDisplay_RequiredPack_Installed_Tip" : "CatalogDisplay_RequiredPack_NotInstalled_Tip", selectedModKey.Name, requiredPackCode])" Color="@(installedPackCodes.Contains(requiredPackCode) ? Color.Success : Color.Error)">
                                    <MudButton Variant="Variant.Filled" Size="Size.Small" OnClick="@(() => SmartSimObserver.HelpWithPackPurchaseAsync(requiredPackCode, DialogService, creators, selectedMod.Select(mod => mod.manifest.ElectronicArtsPromoCode).FirstOrDefault(pc => pc is not null)))" StartIcon="@MaterialDesignIcons.Normal.BagPersonal" Color="@(installedPackCodes.Contains(requiredPackCode) ? Color.Success : Color.Error)">@requiredPackCode</MudButton>
                                </MudTooltip>
                            }
                            @foreach (var incompatiblePackCode in incompatiblePackCodes)
                            {
                                <MudTooltip Arrow Text="@(StringLocalizer[installedPackCodes.Contains(incompatiblePackCode) ? "CatalogDisplay_IncompatiblePack_Installed_Tip" : "CatalogDisplay_IncompatiblePack_NotInstalled_Tip", selectedModKey.Name, incompatiblePackCode])" Color="@(!installedPackCodes.Contains(incompatiblePackCode) ? Color.Success : Color.Error)">
                                    <MudButton Variant="Variant.Filled" Size="Size.Small" OnClick="@(() => Browser.OpenAsync(new Uri("https://jamesturner.yt/disablepacks", UriKind.Absolute), BrowserLaunchMode.External))" StartIcon="@MaterialDesignIcons.Normal.BagPersonalOff" Color="@(!installedPackCodes.Contains(incompatiblePackCode) ? Color.Success : Color.Error)">@incompatiblePackCode</MudButton>
                                </MudTooltip>
                            }
                        </MudStack>
                    </MudItem>
                    <MudFlexBreak />
                    <MudItem xs="12">
                        <MudTable T="FileInfo" Items="@files" Breakpoint="Breakpoint.Md" Dense Filter="IncludeFile" Class="mt-2">
                            <ToolBarContent>
                                <MudTextM3 Typo="TypoM3.Title" Style="width: 80%;">@MarkupLocalizer[nameof(AppText.CatalogDisplay_Files)]</MudTextM3>
                                <MudSpacer />
                                <MudTextField @bind-Value="@filesSearchText" Placeholder="@StringLocalizer[nameof(AppText.Common_Search)]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Immediate Clearable DebounceInterval="250" Class="mt-0" />
                            </ToolBarContent>
                            <HeaderContent>
                                <MudTh>@StringLocalizer[nameof(AppText.CatalogDisplay_Files_ModsFolderPath)]</MudTh>
                                <MudTh></MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="@StringLocalizer[nameof(AppText.CatalogDisplay_Files_ModsFolderPath)]">
                                    <MudBreadcrumbs Items="@(GetModFileBreadcrumbs(context))" Class="ma-0 pa-0" />
                                </MudTd>
                                <MudTd>
                                    <MudStack Row Justify="Justify.FlexEnd">
                                        <MudTooltip Text="@StringLocalizer[nameof(AppText.CatalogDisplay_Files_ViewThisFile_Tip)]" Arrow>
                                            <MudIconButton Icon="@MaterialDesignIcons.Normal.FileFind" Size="Size.Small" OnClick="(() => PlatformFunctions.ViewFile(context))" />
                                        </MudTooltip>
                                    </MudStack>
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                    @if (dependencies.Length is > 0)
                    {
                        <MudItem xs="12">
                            <MudTable T="ModKey" Items="dependencies" Breakpoint="Breakpoint.Md" Dense Filter="IncludeDependency" Class="mt-2">
                                <ToolBarContent>
                                    <MudTextM3 Typo="TypoM3.Title" Style="width: 80%;">@MarkupLocalizer[nameof(AppText.CatalogDisplay_Dependencies)]</MudTextM3>
                                    <MudSpacer />
                                    <MudTextField @bind-Value="@dependenciesSearchText" Placeholder="@StringLocalizer[nameof(AppText.Common_Search)]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Immediate Clearable DebounceInterval="250" />
                                </ToolBarContent>
                                <HeaderContent>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Name)]</MudTh>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Creators)]</MudTh>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Url)]</MudTh>
                                    <MudTh></MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Name)]">
                                        <MudTextM3 Color="@(mods.ContainsKey(context) ? Color.Default : Color.Error)">@context.Name</MudTextM3>
                                    </MudTd>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Creators)]">
                                        <MudTextM3>@context.Creators</MudTextM3>
                                    </MudTd>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Url)]">
                                        <MudLink Href="@context.Url?.ToString()">@context.Url</MudLink>
                                    </MudTd>
                                    <MudTd>
                                        <MudStack Row Justify="Justify.FlexEnd">
                                            @if (mods.ContainsKey(context))
                                            {
                                                <MudTooltip Text="@StringLocalizer[nameof(AppText.CatalogDisplay_Dependencies_OpenCatalogEntry_Tip)]" Arrow>
                                                    <MudIconButton Icon="@MaterialDesignIcons.Normal.OpenInApp" Size="Size.Small" OnClick="@(() => selectedModKey = context)" />
                                                </MudTooltip>
                                            }
                                            else
                                            {
                                                <MudTooltip Text="@StringLocalizer[nameof(AppText.CatalogDisplay_Dependencies_OpenCatalogEntry_Missing_Tip)]" Arrow Color="Color.Error">
                                                    <MudIcon Icon="@MaterialDesignIcons.Normal.FileQuestion" Size="Size.Small" Color="Color.Error" />
                                                </MudTooltip>
                                            }
                                        </MudStack>
                                    </MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudItem>
                    }
                    @if (indexableDependents.Length is > 0)
                    {
                        <MudItem xs="12">
                            <MudTable T="ModKey" Items="indexableDependents" Breakpoint="Breakpoint.Md" Dense Filter="IncludeDependent" Class="mt-2">
                                <ToolBarContent>
                                    <MudTextM3 Typo="TypoM3.Title" Style="width: 80%;">@MarkupLocalizer[nameof(AppText.CatalogDisplay_Dependents)]</MudTextM3>
                                    <MudSpacer />
                                    <MudTextField @bind-Value="@dependentsSearchText" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0" Immediate Clearable DebounceInterval="250" />
                                </ToolBarContent>
                                <HeaderContent>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Name)]</MudTh>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Creators)]</MudTh>
                                    <MudTh>@StringLocalizer[nameof(AppText.Common_Url)]</MudTh>
                                    <MudTh></MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Name)]">
                                        <MudTextM3>@context.Name</MudTextM3>
                                    </MudTd>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Creators)]">
                                        <MudTextM3>@context.Creators</MudTextM3>
                                    </MudTd>
                                    <MudTd DataLabel="@StringLocalizer[nameof(AppText.Common_Url)]">
                                        <MudLink Href="@context.Url?.ToString()">@context.Url</MudLink>
                                    </MudTd>
                                    <MudTd>
                                        <MudStack Row Justify="Justify.FlexEnd">
                                            <MudTooltip Text="@StringLocalizer[nameof(AppText.CatalogDisplay_Dependents_OpenCatalogEntry_Tip)]" Arrow>
                                                <MudIconButton Icon="@MaterialDesignIcons.Normal.OpenInApp" Size="Size.Small" OnClick="@(() => selectedModKey = context)" />
                                            </MudTooltip>
                                        </MudStack>
                                    </MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudItem>
                    }
                }
            </MudGrid>
        </div>
    </MudItem>
</MudGrid>