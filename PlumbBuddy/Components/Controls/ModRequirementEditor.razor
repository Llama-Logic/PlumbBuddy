@inject IDialogService DialogService
@inject IDispatcher Dispatcher
@inject IPlayer Player
@inject IPublicCatalogs PublicCatalogs
@inject PbDbContext PbDbContext

<MudGrid Justify="Justify.Center" Spacing="4">
    <MudItem xs="12">
        <MudTextField T="string" Value="@Name" ValueChanged="HandleNameChanged" Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.Spotlight" Label="Name" HelperText="If a player installs your mod but does not have this requirement, this is the name I will use to describe the missing requirement to them." Immediate />
    </MudItem>
    <MudItem xs="12">
        <ChipSetField Values="@Creators" ValuesChanged="HandleCreatorsChanged" Color="Color.Tertiary" Label="Creators" AdornmentIcon="@MaterialDesignIcons.Normal.AccountGroup" AdornmentColor="Color.Tertiary" ChipIcon="@MaterialDesignIcons.Normal.Account" Placeholder="Enter a creator name here and press enter" HelperText="If a player installs your mod but does not have this requirement, these are the creators I may tell them about when describing the missing requirement to them." />
    </MudItem>
    <MudItem xs="12">
        <MudTextField T="string" Value="@Url" ValueChanged="HandleUrlChanged" Variant="Variant.Filled" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.Download" Label="Download Page URL" HelperText="If a player installs your mod but does not have this requirement, this is the download page URL I will give to them so that they can go get it to install it." />
    </MudItem>
    <MudItem xs="12">
        <ChipSetField Values="@Hashes" ValuesChanged="HandleHashesChanged" Color="Color.Tertiary" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.FileMultiple" ChipIcon="@MaterialDesignIcons.Normal.BarcodeScan" Label="Hashes" HelperText="There should be one manifest hash per each mod file in the requirement. You should add one for each mod file in the required mod that you know your mod uses. Don't worry about the required mod's requirements. It's responsible for those considerations." Placeholder="Enter a hex-formatted SHA 256 manifest hash here and press enter" />
    </MudItem>
    <MudItem>
        <MudButton Variant="Variant.Filled" StartIcon="@MaterialDesignIcons.Normal.FolderOpen" Color="Color.Tertiary" OnClick="HandleBrowseForAddModFileOnClickAsync">Add mod file...</MudButton>
    </MudItem>
    <MudFlexBreak />
    <MudItem xs="12">
        <ChipSetField Values="@RequiredFeatures" ValuesChanged="HandleRequiredFeaturesChanged" Color="Color.Tertiary" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.FeatureSearch" ChipIcon="@MaterialDesignIcons.Normal.Offer" Label="Required Features" HelperText="These are the features the required mod must offer in order for your requirement to be satisfied. This field exists just in case the required mod's creator ever removes a feature, I can guide the player through resolving the issue." Placeholder="Type a feature name here and press enter" />
    </MudItem>
    <MudItem>
        <MudButton Variant="Variant.Filled" StartIcon="@MaterialDesignIcons.Normal.FolderOpen" Color="Color.Tertiary" OnClick="HandleBrowseForModFileForManifestFeatureSelectionOnClickAsync">Select features based on a mod file manifest...</MudButton>
    </MudItem>
    <MudFlexBreak />
    <MudItem md="12">
        <MudTextFieldExtended T="string" Text="@RequirementIdentifier" TextChanged="HandleRequirementIdentifierChanged" Variant="Variant.Filled" Clearable Label="Requirement Identifier" HelperText="If set, the player must have at least one file using this requirement identifier." Placeholder="(currently independently required)">
            <AdornmentStart>
                <MudIcon Icon="@MaterialDesignIcons.Normal.OrderBoolDescendingVariant" Color="Color.Tertiary" />
            </AdornmentStart>
            <AdornmentEnd>
                <MudToggleIconButton @bind-Toggled="@requirementIdentifierGuidanceOpen" Icon="@MaterialDesignIcons.Outline.Information" Color="Color.Info" />
                <MudPopover Open="@requirementIdentifierGuidanceOpen" AnchorOrigin="Origin.TopRight" Fixed TransformOrigin="Origin.BottomRight" Style="transform: translateY(-28px);">
                    <MudAlert Severity="Severity.Info" Icon="@MaterialDesignIcons.Normal.OrderBoolDescendingVariant" Style="max-width: 525px;">
                        <InlineMarkdown>
                            **Requirement Identifiers** are scoped only to your mod. You don't need to worry about making them globally unique.
                        </InlineMarkdown>
                    </MudAlert>
                </MudPopover>
            </AdornmentEnd>
        </MudTextFieldExtended>
    </MudItem>
    <MudItem xs="12" lg="6">
        @if (PublicCatalogs.PackCatalog is { } packCatalog)
        {
            <MudSelectExtended T="KeyValuePair<string, PackDescription>?" @bind-Value="@IgnoreIfPackAvailablePair" ItemCollection="@(packCatalog.OrderBy(kv => kv.Value.EnglishName).Cast<KeyValuePair<string, PackDescription>?>().ToList())" ToStringFunc="@(mnkv => mnkv is { } kv ? $"{kv.Value.EnglishName} ({kv.Key})" : string.Empty)" Variant="Variant.Filled" Color="Color.Tertiary" AnchorOrigin="Origin.BottomCenter" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.BagPersonal" Clearable SearchBox SearchBoxAutoFocus SearchBoxClearable Label="Ignore if Pack Available" HelperText="Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has been installed by the player." Placeholder="(click here to select/search for a pack)" />
        }
        else
        {
            <MudTextField T="string" Text="@IgnoreIfPackAvailable" TextChanged="HandleIgnoreIfPackAvailableChanged" Variant="Variant.Filled" Clearable Label="Ignore if Pack Available" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.BagPersonal" HelperText="Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has been installed by the player." Placeholder="(use a pack code like EP01 for Get to Work)" />
        }
    </MudItem>
    <MudItem xs="12" lg="6">
        @if (PublicCatalogs.PackCatalog is { } packCatalog)
        {
            <MudSelectExtended T="KeyValuePair<string, PackDescription>?" @bind-Value="@IgnoreIfPackUnavailablePair" ItemCollection="@(packCatalog.OrderBy(kv => kv.Value.EnglishName).Cast<KeyValuePair<string, PackDescription>?>().ToList())" ToStringFunc="@(mnkv => mnkv is { } kv ? $"{kv.Value.EnglishName} ({kv.Key})" : string.Empty)" Variant="Variant.Filled" Color="Color.Tertiary" AnchorOrigin="Origin.BottomCenter" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.BagPersonalOff" Clearable SearchBox SearchBoxAutoFocus SearchBoxClearable Label="Ignore if Pack Unavailable" HelperText="Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has not been installed by the player." Placeholder="(click here to select/search for a pack)" />
        }
        else
        {
            <MudTextField T="string" Text="@IgnoreIfPackUnavailable" TextChanged="HandleIgnoreIfPackUnavailableChanged" Variant="Variant.Filled" Clearable Label="Ignore if Pack Unavailable" Adornment="Adornment.Start" AdornmentColor="Color.Tertiary" AdornmentIcon="@MaterialDesignIcons.Normal.BagPersonalOff" HelperText="Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has not been installed by the player." Placeholder="(use a pack code like SP46 for Home Chef Hustle)" />
        }
    </MudItem>
    <MudItem xs="12" lg="6">
        <MudTextFieldExtended T="string" Text="@IgnoreIfHashAvailable" TextChanged="HandleIgnoreIfHashAvailableChanged" Variant="Variant.Filled" Clearable Label="Ignore if Hash Available" HelperText="Instructs agents to ignore this requirement if the presence of a mod manifest hash in the load order indicates the player has installed another mod." Placeholder="(hash of the mod's manifest in hex format)">
            <AdornmentStart>
                <MudIcon Icon="@MaterialDesignIcons.Normal.Barcode" Color="Color.Tertiary" />
            </AdornmentStart>
            <AdornmentEnd>
                <MudButton Variant="Variant.Filled" StartIcon="@MaterialDesignIcons.Normal.FolderOpen" OnClick="HandleBrowseForIgnoreIfHashAvailableModFileOnClickAsync">Browse...</MudButton>
            </AdornmentEnd>
        </MudTextFieldExtended>
    </MudItem>
    <MudItem xs="12" lg="6">
        <MudTextFieldExtended T="string" Text="@IgnoreIfHashUnavailable" TextChanged="HandleIgnoreIfHashUnavailableChanged" Variant="Variant.Filled" Clearable Label="Ignore if Hash Unavailable" HelperText="Instructs agents to ignore this requirement if the absence of a mod manifest hash in the load order indicates the player has not installed another mod." Placeholder="(hash of the mod's manifest in hex format)">
            <AdornmentStart>
                <MudIcon Icon="@MaterialDesignIcons.Normal.BarcodeOff" Color="Color.Tertiary" />
            </AdornmentStart>
            <AdornmentEnd>
                <MudButton Variant="Variant.Filled" StartIcon="@MaterialDesignIcons.Normal.FolderOpen" OnClick="HandleBrowseForIgnoreIfHashUnavailableModFileOnClickAsync">Browse...</MudButton>
            </AdornmentEnd>
        </MudTextFieldExtended>
    </MudItem>
</MudGrid>