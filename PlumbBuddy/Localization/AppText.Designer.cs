//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlumbBuddy.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PlumbBuddy.Localization.AppText", typeof(AppText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask for Help.
        /// </summary>
        internal static string CatalogDisplay_AskForHelp {
            get {
                return ResourceManager.GetString("CatalogDisplay_AskForHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to ask specifically for help with {0} in a Community Support venue..
        /// </summary>
        internal static string CatalogDisplay_AskForHelp_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_AskForHelp_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies.
        /// </summary>
        internal static string CatalogDisplay_Dependencies {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This dependency is missing!.
        /// </summary>
        internal static string CatalogDisplay_Dependencies_OpenCatalogEntry_Missing_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies_OpenCatalogEntry_Missing_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Catalog Entry.
        /// </summary>
        internal static string CatalogDisplay_Dependencies_OpenCatalogEntry_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies_OpenCatalogEntry_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependents.
        /// </summary>
        internal static string CatalogDisplay_Dependents {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Catalog Entry.
        /// </summary>
        internal static string CatalogDisplay_Dependents_OpenCatalogEntry_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependents_OpenCatalogEntry_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        internal static string CatalogDisplay_Files {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Folder Path.
        /// </summary>
        internal static string CatalogDisplay_Files_ModsFolderPath {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files_ModsFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View this File.
        /// </summary>
        internal static string CatalogDisplay_Files_ViewThisFile_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files_ViewThisFile_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://jamesturner.yt/disablepacks.
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_GuidanceUrl {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_GuidanceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is NOT installed. You DO have {1} installed. Click here to view information about how to remove or disable packs..
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_Installed_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_Installed_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is NOT installed. You do not have {1} installed. Click here to view information about how to remove or disable packs..
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_NotInstalled_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_NotInstalled_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is installed. You do have {1} installed. Click here to view the store page for {1}..
        /// </summary>
        internal static string CatalogDisplay_RequiredPack_Installed_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_RequiredPack_Installed_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is installed. You do NOT have {1} installed. Click here to view the store page for {1}..
        /// </summary>
        internal static string CatalogDisplay_RequiredPack_NotInstalled_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_RequiredPack_NotInstalled_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Catalog.
        /// </summary>
        internal static string CatalogDisplay_SearchCatalog {
            get {
                return ResourceManager.GetString("CatalogDisplay_SearchCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods appear in your Catalog when creators have included manifests in them..
        /// </summary>
        internal static string CatalogDisplay_UserAssistanceNote {
            get {
                return ResourceManager.GetString("CatalogDisplay_UserAssistanceNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse....
        /// </summary>
        internal static string Common_Browse_Ellipsis {
            get {
                return ResourceManager.GetString("Common_Browse_Ellipsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string Common_Completed {
            get {
                return ResourceManager.GetString("Common_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creators.
        /// </summary>
        internal static string Common_Creators {
            get {
                return ResourceManager.GetString("Common_Creators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish.
        /// </summary>
        internal static string Common_Finish {
            get {
                return ResourceManager.GetString("Common_Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string Common_Name {
            get {
                return ResourceManager.GetString("Common_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next.
        /// </summary>
        internal static string Common_Next {
            get {
                return ResourceManager.GetString("Common_Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional.
        /// </summary>
        internal static string Common_Optional {
            get {
                return ResourceManager.GetString("Common_Optional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previous.
        /// </summary>
        internal static string Common_Previous {
            get {
                return ResourceManager.GetString("Common_Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string Common_Select {
            get {
                return ResourceManager.GetString("Common_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip.
        /// </summary>
        internal static string Common_Skip {
            get {
                return ResourceManager.GetString("Common_Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped.
        /// </summary>
        internal static string Common_Skipped {
            get {
                return ResourceManager.GetString("Common_Skipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        internal static string Common_Stop {
            get {
                return ResourceManager.GetString("Common_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL.
        /// </summary>
        internal static string Common_Url {
            get {
                return ResourceManager.GetString("Common_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distribution Platform.
        /// </summary>
        internal static string FoldersSelector_DistributionPlatform {
            get {
                return ResourceManager.GetString("FoldersSelector_DistributionPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads Folder.
        /// </summary>
        internal static string FoldersSelector_DownloadsFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_DownloadsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Folder.
        /// </summary>
        internal static string FoldersSelector_InstallationFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_InstallationFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple macOS.
        /// </summary>
        internal static string FoldersSelector_MacOS {
            get {
                return ResourceManager.GetString("FoldersSelector_MacOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to But, ya know... 👉👈... I can make mistakes just like anyone else..
        /// </summary>
        internal static string FoldersSelector_ManualSelection_OnboardingHeading_1 {
            get {
                return ResourceManager.GetString("FoldersSelector_ManualSelection_OnboardingHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change any of these if they&apos;re wrong..
        /// </summary>
        internal static string FoldersSelector_ManualSelection_OnboardingHeading_2 {
            get {
                return ResourceManager.GetString("FoldersSelector_ManualSelection_OnboardingHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System.
        /// </summary>
        internal static string FoldersSelector_OperatingSystem {
            get {
                return ResourceManager.GetString("FoldersSelector_OperatingSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Paths.
        /// </summary>
        internal static string FoldersSelector_ResetPaths {
            get {
                return ResourceManager.GetString("FoldersSelector_ResetPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EA App.
        /// </summary>
        internal static string FoldersSelector_TheEAApp {
            get {
                return ResourceManager.GetString("FoldersSelector_TheEAApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4 is installed..
        /// </summary>
        internal static string FoldersSelector_TS4_Installed {
            get {
                return ResourceManager.GetString("FoldersSelector_TS4_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4 is not installed..
        /// </summary>
        internal static string FoldersSelector_TS4_NotInstalled {
            get {
                return ResourceManager.GetString("FoldersSelector_TS4_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Data Folder.
        /// </summary>
        internal static string FoldersSelector_UserDataFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_UserDataFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bruh... 🤦... there&apos;s not even a folder there..
        /// </summary>
        internal static string FoldersSelector_ValidateFolder_DoesNotExist {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateFolder_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That&apos;s not a valid The Sims 4 installation. 🙄.
        /// </summary>
        internal static string FoldersSelector_ValidateInstallationFolder_NoBinary {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateInstallationFolder_NoBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 👏 Very ambitious for taking me right to your Mods folder, but I actually need your User Data Folder (go up one, please!)..
        /// </summary>
        internal static string FoldersSelector_ValidateUserDataFolder_ModsFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateUserDataFolder_ModsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hey, Silly! That&apos;s not your Sims 4 User Data Folder. 😏 Or you need to launch the game once and try again....
        /// </summary>
        internal static string FoldersSelector_ValidateUserDataFolder_NoOptionsIni {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateUserDataFolder_NoOptionsIni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve Steam.
        /// </summary>
        internal static string FoldersSelector_ValveSteam {
            get {
                return ResourceManager.GetString("FoldersSelector_ValveSteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Windows.
        /// </summary>
        internal static string FoldersSelector_Windows {
            get {
                return ResourceManager.GetString("FoldersSelector_Windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing Topography.
        /// </summary>
        internal static string HUD_AnalyzingTopography_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_AnalyzingTopography_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m taking a closer look at your package load order and reviewing how your mods are interacting with each other to see if I need to warn you about anything. 😏.
        /// </summary>
        internal static string HUD_AnalyzingTopography_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_AnalyzingTopography_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Byte Code Files.
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of compiled Python byte code files I found in script archives in your Mods folder..
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Script Mods are disabled in your Game Options, these compiled Python byte code files will not be loaded and executed by The Sims 4..
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cataloging ETA.
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is my best guess as to how much longer this process is going to take. It will fluctuate a bit as I progress, but less so as I near the end of the list of files..
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estimating.
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Estimating {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Estimating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cataloging Mods.
        /// </summary>
        internal static string HUD_CatalogingMods_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_CatalogingMods_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m currently combing through the files in your Mods folder and scribbling down notes, don&apos;t mind me. 😏.
        /// </summary>
        internal static string HUD_CatalogingMods_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_CatalogingMods_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composing Manifests.
        /// </summary>
        internal static string HUD_ComposingManifests_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ComposingManifests_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s probably best that I do not actively read your Mods folder while I&apos;m also... writing to it? I&apos;ll resume cataloging as soon as these manifests are written. 😏.
        /// </summary>
        internal static string HUD_ComposingManifests_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ComposingManifests_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Version.
        /// </summary>
        internal static string HUD_GameVersion_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_GameVersion_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the current version of The Sims 4 you have installed..
        /// </summary>
        internal static string HUD_GameVersion_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_GameVersion_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        internal static string HUD_Packages_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of packages I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_Packages_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Mods are disabled in your Game Options, these packages will not be loaded by The Sims 4..
        /// </summary>
        internal static string HUD_Packages_Tip_Description_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Description_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Scripts.
        /// </summary>
        internal static string HUD_PythonScripts_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;em&gt;Creator&apos;s Note: While The Sims 4 will work with Python scripts, it does so by interpretting them. Maxis&apos; SmartSim engine &lt;strong&gt;does not&lt;/strong&gt; Just-in-Time compile Python scripts in script archives. This means they will underperform &lt;strong&gt;considerably&lt;/strong&gt;. If these are your script archives, strongly consider compiling their scripts to byte code using Python 3.7.&lt;/em&gt;.
        /// </summary>
        internal static string HUD_PythonScripts_Tip_CreatorsNote {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_CreatorsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of &lt;strong&gt;uncompiled&lt;/strong&gt; Python scripts I found in script archives in your Mods folder..
        /// </summary>
        internal static string HUD_PythonScripts_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        internal static string HUD_Resources_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of resources in the packages I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_Resources_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;em&gt;Creator&apos;s Note: This sum does not account for resource overrides. It is a strict, &quot;dumb sum&quot;.&lt;/em&gt;.
        /// </summary>
        internal static string HUD_Resources_Tip_Description_CreatorsNote {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description_CreatorsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Mods are disabled in your Game Options, these resources will not be loaded by The Sims 4..
        /// </summary>
        internal static string HUD_Resources_Tip_Description_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Archives.
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of script archives I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Script Mods are disabled in your Game Options, these script archives will not be opened and executed by The Sims 4..
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sleeping.
        /// </summary>
        internal static string HUD_Sleeping_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Sleeping_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s probably best that I do not actively read your Mods folder while you&apos;re playing to maximize your computer&apos;s resources for the game itself. I&apos;ll wake up as soon as you exit the game. 😏.
        /// </summary>
        internal static string HUD_Sleeping_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Sleeping_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting.
        /// </summary>
        internal static string HUD_Waiting_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Waiting_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m just waiting for activity in your Mods folder to die down and then I&apos;ll have a look. 😏.
        /// </summary>
        internal static string HUD_Waiting_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Waiting_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subsumed hash from mod file....
        /// </summary>
        internal static string ManifestComponentEditor_AddSubsumedHashFromModFile_Local {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_AddSubsumedHashFromModFile_Local", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since each file in your mod will have its own manifest resource, it can technically have a different name if you want it to. This can be good for specifically labeling add-ons. It would probably be smart, however, to still include the full name of your mod, e.g. Vacuum Clean the Cats: Discover University Support..
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component Name.
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (type a specific name for this component if you want).
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Exclusivity** is globally scoped in the mod load order. Make sure to include elements uniquely identifying your mod if other mods should not be considered. For example:
        ///&gt; vyxated - Chalk&apos;d UI - Support - TMEX - Smarter Pie Menu.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Guidance {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Guidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one file with the same exclusivity will be permitted. If PlumbBuddy discovers multiple manifests in the same Mods folder with the same exclusivity, this will generate a warning for the player. Use this to mark mod files that are incompatible with each other, such as when they needed to select one package or another depending on whether they have a pack or another mod installed..
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusivities.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type the name of an exclusivity here and press enter.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if the presence of a mod manifest hash in the load order indicates the player has installed another mod..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Hash Available.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (hash of the mod&apos;s manifest in hex format).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if the absence of a mod manifest hash in the load order indicates the player has not installed another mod..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Hash Unavailable.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (hash of the mod&apos;s manifest in hex format).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (use a pack code like EP01 for Get to Work).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has been installed by the player..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Pack Available.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for a pack).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (use a pack code like SP46 for Home Chef Hustle).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has not been installed by the player..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Pack Unavailable.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for a pack).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My mod requires this file to work properly — it is not an optional add-on to suit the player&apos;s preferences..
        /// </summary>
        internal static string ManifestComponentEditor_IsRequired_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IsRequired_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because this component of your mod is a package file, its manifest will be will be a snippet tuning resource in your package. This is the name of that resource and it should be unique. I will generate the full instance for the snippet tuning resource on my own using the Sims 4 modding community standard implementation of the 64-bit Fowler–Noll–Vo hash function with the highest-order bit set..
        /// </summary>
        internal static string ManifestComponentEditor_ManifestSnippetTuningResourceName_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ManifestSnippetTuningResourceName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Snippet Tuning Resource Name.
        /// </summary>
        internal static string ManifestComponentEditor_ManifestSnippetTuningResourceName_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ManifestSnippetTuningResourceName_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, the player must have at least one file using this requirement identifier. Requirement Identifiers are scoped only to your mod. You don&apos;t need to worry about making them globally unique..
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirement Identifier.
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (currently independently required).
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the hashes of previous version of this mod file. The manifest keeps them so that if I&apos;m checking to see if a player has your mod installed because another mod requires it, the other mod requiring an older version of your mod is not a problem. However, if you make breaking changes in this mod file you should probably clear these out so that it will be obvious that your newer version isn&apos;t going to work well with the other mod. Otherwise, it&apos;s best to leave this field alone and let me manage it for  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subsumed Hashes.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a hex-formatted SHA 256 manifest hash here and press enter.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had manifests that *did not need* to be updated:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ManifestsNotUpdated {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ManifestsNotUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had manifests that *needed* to be updated:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ManifestsUpdated {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ManifestsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had no scaffolding and were therefore skipped:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ModFilesNotScaffolded {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ModFilesNotScaffolded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing &lt;strong&gt;{0}&lt;/strong&gt; (mod file &lt;strong&gt;{1:n0}&lt;/strong&gt; of &lt;strong&gt;{2:n0}&lt;/strong&gt;).
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Status {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point of No Return.
        /// </summary>
        internal static string ManifestEditor_Caution_ConfirmWithWarnings_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_ConfirmWithWarnings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You *still* have **unresolved warnings** regarding your mod&apos;s manifest. I *can* proceed with these issues if you think I&apos;m mistaken, but *you are responsible for ignoring these warnings if I&apos;m not*..
        /// </summary>
        internal static string ManifestEditor_Caution_ConfirmWithWarnings_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_ConfirmWithWarnings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Cannot Be Undone.
        /// </summary>
        internal static string ManifestEditor_Caution_DuplicateComponentSettings_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_DuplicateComponentSettings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I am about to apply the component settings on screen now to every mod file you have checked in the list..
        /// </summary>
        internal static string ManifestEditor_Caution_DuplicateComponentSettings_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_DuplicateComponentSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel?.
        /// </summary>
        internal static string ManifestEditor_Caution_OfferToCancel_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_OfferToCancel_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll discard any changes you&apos;ve made to this manifest and go back to the beginning of the process..
        /// </summary>
        internal static string ManifestEditor_Caution_OfferToCancel_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_OfferToCancel_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Cannot Be Undone.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveModFiles_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveModFiles_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If I remove the selected components of your mod and you change your mind, you&apos;ll need to click cancel on the bottom of the window and start the whole process over again or add them back manually..
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveModFiles_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveModFiles_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure?.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re about to remove your mod&apos;s requirement of {0}. If you change your mind you&apos;ll have to **Cancel** and start from scratch or add it back.&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/qxCYGGPbQp3yj5aSsL&quot; width=&quot;480&quot; height=&quot;360&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/thelonelyisland-season-3-i-think-you-should-leave-itysl-qxCYGGPbQp3yj5aSsL&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to this mod.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Text_ModNameFallback {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Text_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Settings.
        /// </summary>
        internal static string ManifestEditor_Components_DuplicateSettings_Tip_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_DuplicateSettings_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate these settings, applying them to multiple mod files at once..
        /// </summary>
        internal static string ManifestEditor_Components_DuplicateSettings_Tip_Description {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_DuplicateSettings_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are all the files we currently consider a part of your mod..
        /// </summary>
        internal static string ManifestEditor_Components_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🏗️ Are we leaving anything out?.
        /// </summary>
        internal static string ManifestEditor_Components_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Components.
        /// </summary>
        internal static string ManifestEditor_Components_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ☝️ Please wait just a moment..
        /// </summary>
        internal static string ManifestEditor_Composing_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🚧 Manifest Composition is in progress. 🚧.
        /// </summary>
        internal static string ManifestEditor_Composing_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding cross-reference requirements to `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_AddingCrossReferenceRequirements {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_AddingCrossReferenceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computing manifest hash for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_ComputingHash {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_ComputingHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating scaffolding for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_CreatingScaffolding {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_CreatingScaffolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All component manifests have been updated and scaffolding has been written.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_Finished {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating cross-reference requirements for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_GeneratingCrossReferenceRequirements {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_GeneratingCrossReferenceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing manfiest for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_InitializingManifest {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_InitializingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing any manifests from `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_RemovingManifests {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_RemovingManifests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving manifest to `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_SavingManifest {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_SavingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoops, it looks like you used the `{0}` **Manifest Snippet Tuning Resource Name** for each of the following mod files when they each need to be unique. You can go back to the **Components** step to fix this.
        ///{1}.
        /// </summary>
        internal static string ManifestEditor_Confirm_Error_NonUniqueManifestSnippetTuningNames {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Error_NonUniqueManifestSnippetTuningNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🛑 Woah, there, Chief! We can&apos;t quite do this... ⛔.
        /// </summary>
        internal static string ManifestEditor_Confirm_ErrorHeading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ErrorHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 👈 It looks like you need to go back and fix something..
        /// </summary>
        internal static string ManifestEditor_Confirm_ErrorHeading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ErrorHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string ManifestEditor_Confirm_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your mod requires packs which some players may not have, but might purchase specifically to use with *your mod*, and yet, you have not given me an **EA Promo Code**. If you do have one, you really shouldn&apos;t be leaving money on the table like this, friend. Consider doing yourself a solid, heading back to the **Requirements** step, and filling in that code.&lt;br /&gt;
        ///If you don&apos;t have one, but you&apos;re interested in getting a commission for all the packs your awesome mod is about to help EA sell, please allow me t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Confirm_Note_BlankPromoCode {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Note_BlankPromoCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📃 If I had any notes or concerns, I put them below. If the area&apos;s blank then... 🤷 no notes..
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click &lt;div class=&quot;mud-chip-container&quot;&gt;&lt;div tabindex=&quot;-1&quot; class=&quot;mud-chip mud-chip-filled mud-chip-size-large mud-chip-color-tertiary mud-chip-label&quot;&gt;&lt;span class=&quot;mud-chip-content&quot;&gt;FINISH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; to update the manifest in your {0} and they&apos;ll be ready to go. 🚀.
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mod file.
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_2_ModFile {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_2_ModFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your mod does not have a valid download page URL!* You can go back to the **Details** step and type one in, and probably should because if you don&apos;t:
        ///* If a problem comes up and I need to discuss your mod with a player it will be awkward because I&apos;ll have no place to send them on the web if they need to download a fresh copy or an update.
        ///* If your mod is ever referenced as a dependency and then a player doesn&apos;t have it or needs to update it, that conversation gets even more awkward because... again... w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankDownloadPageUrl {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankDownloadPageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your `{0}` mod file is a package with a **Manifest Snippet Tuning Resource Name** which you left either blank or just as white space. Since I have to have something substantive and unique there, if we continue I&apos;m going to generate something for you. If you&apos;d rather I didn&apos;t, you can go back to the **Components** step and fill it in for yourself..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankManifestSnippetTuningName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankManifestSnippetTuningName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your mod has no name!* You can go back to the **Details** step and type one in, and probably should because if you don&apos;t:
        ///* If a problem comes up and I need to discuss your mod with a player it will be awkward because I&apos;ll have to refer to file names when I could be using a more familiar name.
        ///* If your mod is ever referenced as a dependency and then a player doesn&apos;t have it, that conversation gets even more awkward because I have to discuss them getting it without telling them what it&apos;s called..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankModName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your **{0}** required mod doesn&apos;t have a valid download page URL!* You can go back to the **Requirements** step and type one in, and probably should because if you don&apos;t and a problem comes up and I need to discuss your mod&apos;s requirement with a player, it will be awkward because the only place to send them on the web to try to find a fresh copy of the requirement will be your mod&apos;s download page. Not the best user experience..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankRequiredModDownloadPageUrl {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankRequiredModDownloadPageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your **{0}** required mod has no name!* You can go back to the **Requirements** step and type one in, and probably should because if you don&apos;t and a problem comes up and I need to discuss your mod&apos;s requirements with a player, it&apos;s gonna be very vague. *Did you notice how I just had to tell you which requirement has this problem **with a number?***.
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankRequiredModName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankRequiredModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *You haven&apos;t specified any creators.* Look, I know stepping into the limelight can be a bit daunting... but you deserve recognition for what you&apos;ve done! You can go back to the **Details** step and fill in your own name and the names of anyone who worked with you on this mod..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_NoCreators {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_NoCreators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use this field to establish feature flags. When other creators reference your mod as a requirement, they will be able to specify which features they need. This can be seen as an alternative to version ranges..
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a feature name here and press enter.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🕹️ Entertaining the player ourselves isn&apos;t the only way we can bring value..
        /// </summary>
        internal static string ManifestEditor_CrossMod_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sometimes it&apos;s helping others shine. 💁‍♀️.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-Mod.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Semantic Versioning Links.
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I made changes to my mod which will break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_MajorLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_MajorLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I added features to my mod in a way which will not break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_MinorLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_MinorLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I made other changes to my mod in a way which will not break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_PatchLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_PatchLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Version_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Version_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I maintain versions of my mod..
        /// </summary>
        internal static string ManifestEditor_CrossMod_VersionToggle_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_VersionToggle_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So uhh... 🕵️‍♂️ who&apos;s responsible for this?.
        /// </summary>
        internal static string ManifestEditor_Details_Creators_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Creators_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a creator name here and press enter.
        /// </summary>
        internal static string ManifestEditor_Details_Creators_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Creators_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This should be a web page on which links or buttons are available to download the mod files for THIS MOD..
        /// </summary>
        internal static string ManifestEditor_Details_DownloadPageUrl_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_DownloadPageUrl_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Page URL.
        /// </summary>
        internal static string ManifestEditor_Details_DownloadPageUrl_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_DownloadPageUrl_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, let&apos;s get started nice and easy... 😅.
        /// </summary>
        internal static string ManifestEditor_Details_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📝 How about we cover the basics first?.
        /// </summary>
        internal static string ManifestEditor_Details_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        internal static string ManifestEditor_Details_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What&apos;s your mod called? Pretty simple..
        /// </summary>
        internal static string ManifestEditor_Details_ModName_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_ModName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Web Browser.
        /// </summary>
        internal static string ManifestEditor_Details_OpenInWebBrowser_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_OpenInWebBrowser_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because making players click through multiple pages to find your download is *rude and in bad form*, **DO NOT LINK TO:**
        ///* your top-level domain (unless you got one only for this mod or its index page has the download for your mods files);
        ///* your Patreon feed (as opposed to a Patreon post devoted to this mod);
        ///* your profile on a hosting website such as Mod the Sims, CurseForge, or The Sims Resource (as opposed to the download page for this mod on that site); or,
        ///* any other page which does not feature  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Popover_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Popover_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are concerned about the stability of the URL you currently have for any reason, consider [applying for a modding community sponsored redirect URL](https://plumbbuddy.app/community-services/redirect-hosting) which you will be able to change later to suit your needs..
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Popover_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Popover_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See Things Not To Do.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is completely okay if on this same page you *also*:
        ///* feature your other modding content;
        ///* feature links to other creators;
        ///* display ads to the player; and,
        ///* solicit donations from the player—you should, you deserve it!—so long as they are not **required** to access your mod files outside the terms defined by [Electronic Arts&apos; Mods and Game Updates Policy for The Sims 4](https://help.ea.com/en-gb/help/the-sims/the-sims-4/mods-and-the-sims-4-game-updates/)..
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsToDo_Popover {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsToDo_Popover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See Things To Do.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsToDo_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsToDo_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package corrupt, damaged, or locked.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessiblePackage_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessiblePackage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I was unable to read this file as a valid Maxis DataBase Packed File with exclusive access:
        ///`{1}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/1g2JyW7p6mtZc6bOEY&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/guavajuice-guava-juice-roi-1g2JyW7p6mtZc6bOEY&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessiblePackage_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessiblePackage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script archive corrupt, damaged, or locked.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessibleScriptArchive_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessibleScriptArchive_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I was unable to read this file as a valid ZIP archive with exclusive access:
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/3o72EYhVhAYFJ4rv68&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/ghostbustersmovies-ghostbusters-original-3o72EYhVhAYFJ4rv68&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessibleScriptArchive_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessibleScriptArchive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong.
        /// </summary>
        internal static string ManifestEditor_Error_ManifestCompositionFailure_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ManifestCompositionFailure_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While I was writing your manifests, an unexpected error occurred. I&apos;ve written it to my log file..
        /// </summary>
        internal static string ManifestEditor_Error_ManifestCompositionFailure_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ManifestCompositionFailure_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaffolding points to missing file.
        /// </summary>
        internal static string ManifestEditor_Error_ScaffoldingReferenceBroken_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ScaffoldingReferenceBroken_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you last updated the manifest in this mod, it had a file at this location which I failed to find. If you weren&apos;t expecting to see this message, you should probably investigate.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/6uGhT1O4sxpi8&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/awkward-pulp-fiction-john-travolta-6uGhT1O4sxpi8&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_ScaffoldingReferenceBroken_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ScaffoldingReferenceBroken_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a mod file first.
        /// </summary>
        internal static string ManifestEditor_Error_SelectAModFileFirst_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_SelectAModFileFirst_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A journey of a thousand miles begins with the first step. And this is gonna be like... *much quicker* than that..
        /// </summary>
        internal static string ManifestEditor_Error_SelectAModFileFirst_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_SelectAModFileFirst_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new extension... who dis?.
        /// </summary>
        internal static string ManifestEditor_Error_UnrecognizedFileType_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_UnrecognizedFileType_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What even is this?
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/WRQBXSCnEFJIuxktnw&quot; width=&quot;480&quot; height=&quot;307&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/math-lady-meme-WRQBXSCnEFJIuxktnw&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_UnrecognizedFileType_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_UnrecognizedFileType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Images {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashing Elements.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Package Data.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_OtherPackageData {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_OtherPackageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sim Data.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_SimData {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_SimData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Tables.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_StringTables {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_StringTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuning.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Tuning {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Tuning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some players like to alter packages for their own purposes. 📦.
        /// </summary>
        internal static string ManifestEditor_Hashing_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🔐 We should talk about what you&apos;re comfortable with..
        /// </summary>
        internal static string ManifestEditor_Hashing_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I identify your mod&apos;s files on players&apos; computers by examining the contents of the files, *not* by trusting file names. This is because players can (and do) rename mod files to influence the game&apos;s mod load order. I need to know what things in your mod&apos;s files to consider in identifying your mod..
        /// </summary>
        internal static string ManifestEditor_Hashing_Info {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashing.
        /// </summary>
        internal static string ManifestEditor_Hashing_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lenient.
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moderate (Recommended).
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strict.
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_3 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inclination to increase this setting because the thought of players altering your mods upsets you is valid. But please do consider that some players may be using your mod in a language for which you do not provide a translation, for example, and arbitrary strictness here will punish them when that may not be your intention..
        /// </summary>
        internal static string ManifestEditor_Hashing_Warning {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whole Lotta Noth&apos;n.
        /// </summary>
        internal static string ManifestEditor_Info_BatchUpdateNoModFilesManifested_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_BatchUpdateNoModFilesManifested_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the mod files examined had manifests to potentially be updated..
        /// </summary>
        internal static string ManifestEditor_Info_BatchUpdateNoModFilesManifested_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_BatchUpdateNoModFilesManifested_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So, a manifest but no scaffolding, eh?.
        /// </summary>
        internal static string ManifestEditor_Info_MissingScaffolding_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_MissingScaffolding_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are only a few reasons this might happen. In any case, you are seen.
        ///1. *You are* the original creator of this mod and you don&apos;t back up your files (in which case, for shame). You&apos;re going to have to re-add all of your mod&apos;s components without the scaffolding, but I will clean-up intramod requirements for you automatically as you go.
        ///2. You&apos;re a kind soul adopting an orphaned mod and the marmot smiles down upon you. If so, we do have [some potentially useful advice for you](https://plumbbuddy.app/co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Info_MissingScaffolding_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_MissingScaffolding_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package is the result of multiple manifested packages which were merged.
        /// </summary>
        internal static string ManifestEditor_Info_SelectedMergedPackage_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_SelectedMergedPackage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just so you&apos;re aware... this file has multiple manifests. Frankly, not the best. Don&apos;t worry, I&apos;ll tidy things up and leave it with just one when we finish here.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///From the available **Manifest Snippet Tuning Resource Names**, I selected `{1}`. You can change that if you want by selecting this file on the **Components** step.&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/8Fla28qk2RGlYa2nXr&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Info_SelectedMergedPackage_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_SelectedMergedPackage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examining mod file.
        /// </summary>
        internal static string ManifestEditor_Loading_ExaminingModFile {
            get {
                return ResourceManager.GetString("ManifestEditor_Loading_ExaminingModFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading mod files.
        /// </summary>
        internal static string ManifestEditor_Loading_ReadingModFiles {
            get {
                return ResourceManager.GetString("ManifestEditor_Loading_ReadingModFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to copy this Batch Processing Report to your computer&apos;s clipboard?.
        /// </summary>
        internal static string ManifestEditor_Question_CopyBatchUpdateReportToClipboard_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Question_CopyBatchUpdateReportToClipboard_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Required Mod....
        /// </summary>
        internal static string ManifestEditor_Requirements_AddRequiredMod_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_AddRequiredMod_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If *your whole mod* will only work with the presence of other mods, even under certain conditions, let me know about it here.
        ///
        ///If only *parts* of your mod need to be present or not based on whether packs or other mods are present or not, the step to tell me about that was **Components**. But don&apos;t worry! You can always go back!.
        /// </summary>
        internal static string ManifestEditor_Requirements_AddRequiredMod_Popover {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_AddRequiredMod_Popover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🤔 We&apos;re all searching for fulfillment at the end of the day..
        /// </summary>
        internal static string ManifestEditor_Requirements_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What does your mod &lt;strong&gt;need&lt;/strong&gt; to be happy? 😊.
        /// </summary>
        internal static string ManifestEditor_Requirements_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a pack code like GP12 for Werewolves and press enter.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are there any official The Sims 4 packs from Electronic Arts that will cause your mod to NOT WORK?.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible Packs.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for packs).
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements.
        /// </summary>
        internal static string ManifestEditor_Requirements_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have been invited to the EA Creator Network, PlumbBuddy can give players your Promo Code to use at check-out when buying packs to use with your mod..
        /// </summary>
        internal static string ManifestEditor_Requirements_PromoCode_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_PromoCode_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EA Promo Code.
        /// </summary>
        internal static string ManifestEditor_Requirements_PromoCode_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_PromoCode_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Requirement.
        /// </summary>
        internal static string ManifestEditor_Requirements_RemoveRequirement_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RemoveRequirement_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a pack code like GP08 for Realm of Magic and press enter.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Does your mod need any official The Sims 4 packs from Electronic Arts to work?.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Packs.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for packs).
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update all the Manifests in Mods in a Folder.
        /// </summary>
        internal static string ManifestEditor_Select_BatchUpdate_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_BatchUpdate_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click this button to select a folder and then update the manifests in every mod found in a recursive search of the folder. Any problems or warnings encountered by the Manifest Editor will immediately interrupt the process..
        /// </summary>
        internal static string ManifestEditor_Select_BatchUpdate_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_BatchUpdate_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for scaffolding in a &quot;PlumbBuddy&quot; subfolder first..
        /// </summary>
        internal static string ManifestEditor_Select_CheckForScaffoldingLocation_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_CheckForScaffoldingLocation_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll check in both places either way, but you can use this switch to control where I look first..
        /// </summary>
        internal static string ManifestEditor_Select_CheckForScaffoldingLocation_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_CheckForScaffoldingLocation_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let&apos;s start by selecting &lt;strong&gt;any&lt;/strong&gt; file for your mod.&lt;br /&gt;&lt;br /&gt;It doesn’t matter if it’s a package or a script archive. If there&apos;s more than one file for your mod, you can just pick the most prominent one, the first one you made, the one that’s first alphabetically, or pick one at random. Doesn’t really matter 🤷. You&apos;ll be able to specify any remaining files later in this process..
        /// </summary>
        internal static string ManifestEditor_Select_Guidance {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Guidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teach me about your mod so I can help players (and other creators) with it..
        /// </summary>
        internal static string ManifestEditor_Select_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It will be &lt;em&gt;manifestly&lt;/em&gt; awesome. 😏.
        /// </summary>
        internal static string ManifestEditor_Select_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string ManifestEditor_Select_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any File from Your Mod.
        /// </summary>
        internal static string ManifestEditor_Select_Picker_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Picker_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write scaffolding in a &quot;PlumbBuddy&quot; subfolder to keep my mod files&apos; folder more orderly..
        /// </summary>
        internal static string ManifestEditor_Select_WriteScaffoldingLocation_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_WriteScaffoldingLocation_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll clean up any old, unneeded scaffolding files left behind if you change this setting..
        /// </summary>
        internal static string ManifestEditor_Select_WriteScaffoldingLocation_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_WriteScaffoldingLocation_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Successfully Copied to Clipboard.
        /// </summary>
        internal static string ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste it where you like. 😏.
        /// </summary>
        internal static string ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use PlumbBuddy.app Public Pack Catalog when entering Pack Codes.
        /// </summary>
        internal static string ManifestEditor_UsePublicPackCatalog_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_UsePublicPackCatalog_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switching this on will cause fields which expect Pack Codes to connect to the PlumbBuddy.app web site, allowing you to search and select from its Public Pack Catalog instead of having to know the codes yourself. This feature requires an Internet connection..
        /// </summary>
        internal static string ManifestEditor_UsePublicPackCatalog_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_UsePublicPackCatalog_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Mod File.
        /// </summary>
        internal static string ModFileSelector_SelectAModFile_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod file contains no manifests.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Error_NoManifests_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Error_NoManifests_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m sorry, but the mod file you selected doesn&apos;t contain any manifests. For technical reasons, it simply isn&apos;t safe to try to reference it in this manner. All you can do for now is *politely* ask the original creator to publish it with a manifest in their next release... and then wait **patiently**.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/3oEjI8D0T5KXgPZrTW&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/summ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Error_NoManifests_Text {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Error_NoManifests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod file contains multiple manifests.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is embarassing, but I&apos;m going to have to ask you to select precisely which of the manifests this mod file contains that you mean because some bozo merged their files and didn&apos;t update the manifests. 🤦
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/8Fla28qk2RGlYa2nXr&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/8Fla28qk2RGlYa2nXr&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Text {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no file at this location..
        /// </summary>
        internal static string ModFileSelector_Validate_FileNotFound {
            get {
                return ResourceManager.GetString("ModFileSelector_Validate_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a Maxis DBPF package or a TS4 script archive..
        /// </summary>
        internal static string ModFileSelector_Validate_InvalidFormat {
            get {
                return ResourceManager.GetString("ModFileSelector_Validate_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a player installs your mod but does not have this requirement, these are the creators I may tell them about when describing the missing requirement to them..
        /// </summary>
        internal static string ModRequirementEditor_Creators_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Creators_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a player installs your mod but does not have this requirement, this is the name I will use to describe the missing requirement to them..
        /// </summary>
        internal static string ModRequirementEditor_Name_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Name_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the features the required mod must offer in order for your requirement to be satisfied. This field exists just in case the required mod&apos;s creator ever removes a feature, I can guide the player through resolving the issue..
        /// </summary>
        internal static string ModRequirementEditor_RequiredFeatures_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_RequiredFeatures_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Features.
        /// </summary>
        internal static string ModRequirementEditor_RequiredFeatures_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_RequiredFeatures_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select features based on a mod file manifest....
        /// </summary>
        internal static string ModRequirementEditor_SelectFeaturesBasedOnModFileManifest_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_SelectFeaturesBasedOnModFileManifest_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game&apos;s Running... So Sleepy....
        /// </summary>
        internal static string ScanIssuesDisplay_MDCAsleep_Caption {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCAsleep_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since we shouldn&apos;t be doing anything to your Mods folder while the game is running, I hope you won&apos;t mind if I catch a few winks while you play..
        /// </summary>
        internal static string ScanIssuesDisplay_MDCAsleep_Description {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCAsleep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m Looking at Your Mods Folder....
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Caption {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once I&apos;m done I&apos;ll let you know if there&apos;s anything to be concerned about. Don&apos;t worry, anything important will be at the top of the list!.
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Description {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please don&apos;t launch the game right now!.
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Warning {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4.
        /// </summary>
        internal static string UserDataFolderName {
            get {
                return ResourceManager.GetString("UserDataFolderName", resourceCulture);
            }
        }
    }
}
