//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlumbBuddy.Localization {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class AppText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal AppText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PlumbBuddy.Localization.AppText", typeof(AppText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask for Help.
        /// </summary>
        internal static string CatalogDisplay_AskForHelp {
            get {
                return ResourceManager.GetString("CatalogDisplay_AskForHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to ask specifically for help with {0} in a Community Support venue..
        /// </summary>
        internal static string CatalogDisplay_AskForHelp_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_AskForHelp_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies.
        /// </summary>
        internal static string CatalogDisplay_Dependencies {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This dependency is missing!.
        /// </summary>
        internal static string CatalogDisplay_Dependencies_OpenCatalogEntry_Missing_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies_OpenCatalogEntry_Missing_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Catalog Entry.
        /// </summary>
        internal static string CatalogDisplay_Dependencies_OpenCatalogEntry_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependencies_OpenCatalogEntry_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependents.
        /// </summary>
        internal static string CatalogDisplay_Dependents {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Catalog Entry.
        /// </summary>
        internal static string CatalogDisplay_Dependents_OpenCatalogEntry_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Dependents_OpenCatalogEntry_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        internal static string CatalogDisplay_Files {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Folder Path.
        /// </summary>
        internal static string CatalogDisplay_Files_ModsFolderPath {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files_ModsFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View this File.
        /// </summary>
        internal static string CatalogDisplay_Files_ViewThisFile_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_Files_ViewThisFile_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to https://jamesturner.yt/disablepacks.
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_GuidanceUrl {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_GuidanceUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is NOT installed. You DO have {1} installed. Click here to view information about how to remove or disable packs..
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_Installed_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_Installed_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is NOT installed. You do not have {1} installed. Click here to view information about how to remove or disable packs..
        /// </summary>
        internal static string CatalogDisplay_IncompatiblePack_NotInstalled_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_IncompatiblePack_NotInstalled_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is installed. You do have {1} installed. Click here to view the store page for {1}..
        /// </summary>
        internal static string CatalogDisplay_RequiredPack_Installed_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_RequiredPack_Installed_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} requires that {1} is installed. You do NOT have {1} installed. Click here to view the store page for {1}..
        /// </summary>
        internal static string CatalogDisplay_RequiredPack_NotInstalled_Tip {
            get {
                return ResourceManager.GetString("CatalogDisplay_RequiredPack_NotInstalled_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search Catalog.
        /// </summary>
        internal static string CatalogDisplay_SearchCatalog {
            get {
                return ResourceManager.GetString("CatalogDisplay_SearchCatalog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods appear in your Catalog when creators have included manifests in them..
        /// </summary>
        internal static string CatalogDisplay_UserAssistanceNote {
            get {
                return ResourceManager.GetString("CatalogDisplay_UserAssistanceNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse....
        /// </summary>
        internal static string Common_Browse_Ellipsis {
            get {
                return ResourceManager.GetString("Common_Browse_Ellipsis", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;li&gt;&amp;bull; {0}&lt;/li&gt;.
        /// </summary>
        internal static string Common_BulletListItem {
            get {
                return ResourceManager.GetString("Common_BulletListItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        internal static string Common_Cancel {
            get {
                return ResourceManager.GetString("Common_Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Completed.
        /// </summary>
        internal static string Common_Completed {
            get {
                return ResourceManager.GetString("Common_Completed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creators.
        /// </summary>
        internal static string Common_Creators {
            get {
                return ResourceManager.GetString("Common_Creators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable All.
        /// </summary>
        internal static string Common_DisableAll {
            get {
                return ResourceManager.GetString("Common_DisableAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable All.
        /// </summary>
        internal static string Common_EnableAll {
            get {
                return ResourceManager.GetString("Common_EnableAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish.
        /// </summary>
        internal static string Common_Finish {
            get {
                return ResourceManager.GetString("Common_Finish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more.
        /// </summary>
        internal static string Common_LearnMore {
            get {
                return ResourceManager.GetString("Common_LearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string Common_Name {
            get {
                return ResourceManager.GetString("Common_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next.
        /// </summary>
        internal static string Common_Next {
            get {
                return ResourceManager.GetString("Common_Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string Common_No {
            get {
                return ResourceManager.GetString("Common_No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OK.
        /// </summary>
        internal static string Common_Ok {
            get {
                return ResourceManager.GetString("Common_Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional.
        /// </summary>
        internal static string Common_Optional {
            get {
                return ResourceManager.GetString("Common_Optional", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Previous.
        /// </summary>
        internal static string Common_Previous {
            get {
                return ResourceManager.GetString("Common_Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string Common_Select {
            get {
                return ResourceManager.GetString("Common_Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected.
        /// </summary>
        internal static string Common_Selected {
            get {
                return ResourceManager.GetString("Common_Selected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set Default.
        /// </summary>
        internal static string Common_SetDefault {
            get {
                return ResourceManager.GetString("Common_SetDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me.
        /// </summary>
        internal static string Common_ShowMe {
            get {
                return ResourceManager.GetString("Common_ShowMe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip.
        /// </summary>
        internal static string Common_Skip {
            get {
                return ResourceManager.GetString("Common_Skip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped.
        /// </summary>
        internal static string Common_Skipped {
            get {
                return ResourceManager.GetString("Common_Skipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steam.
        /// </summary>
        internal static string Common_Steam {
            get {
                return ResourceManager.GetString("Common_Steam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop.
        /// </summary>
        internal static string Common_Stop {
            get {
                return ResourceManager.GetString("Common_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EA app.
        /// </summary>
        internal static string Common_TheEAApp {
            get {
                return ResourceManager.GetString("Common_TheEAApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URL.
        /// </summary>
        internal static string Common_Url {
            get {
                return ResourceManager.GetString("Common_Url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string Common_Yes {
            get {
                return ResourceManager.GetString("Common_Yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete Error Logs.
        /// </summary>
        internal static string DeleteErrorLogsDialog_Caption {
            get {
                return ResourceManager.GetString("DeleteErrorLogsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Logs to Delete.
        /// </summary>
        internal static string DeleteErrorLogsDialog_ErrorLogsToDelete_Label {
            get {
                return ResourceManager.GetString("DeleteErrorLogsDialog_ErrorLogsToDelete_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You actually have a number of pending error logs. Would you like to delete more than one?.
        /// </summary>
        internal static string DeleteErrorLogsDialog_Text {
            get {
                return ResourceManager.GetString("DeleteErrorLogsDialog_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoops, Something Went Wrong!.
        /// </summary>
        internal static string Dialogs_Error_GetSupportDiscordsFailed_Caption {
            get {
                return ResourceManager.GetString("Dialogs_Error_GetSupportDiscordsFailed_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While I was trying to get the Support Discords list from my website, it just... didn&apos;t work. Umm... can we try this again later?.
        /// </summary>
        internal static string Dialogs_Error_GetSupportDiscordsFailed_Text {
            get {
                return ResourceManager.GetString("Dialogs_Error_GetSupportDiscordsFailed_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is it alright with you if I download the Community Support Venues list from plumbbuddy.app?.
        /// </summary>
        internal static string Dialogs_Question_DownloadSupportDiscords_Caption {
            get {
                return ResourceManager.GetString("Dialogs_Question_DownloadSupportDiscords_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The people that made me defer to the people who run the Community Support Venues, so I need to get the latest list of available Community Support Venues and what they expect of us. But, I want your permission to connect to the Internet to do that..
        /// </summary>
        internal static string Dialogs_Question_DownloadSupportDiscords_Text {
            get {
                return ResourceManager.GetString("Dialogs_Question_DownloadSupportDiscords_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Distribution Platform.
        /// </summary>
        internal static string FoldersSelector_DistributionPlatform {
            get {
                return ResourceManager.GetString("FoldersSelector_DistributionPlatform", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloads Folder.
        /// </summary>
        internal static string FoldersSelector_DownloadsFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_DownloadsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation Folder.
        /// </summary>
        internal static string FoldersSelector_InstallationFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_InstallationFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apple macOS.
        /// </summary>
        internal static string FoldersSelector_MacOS {
            get {
                return ResourceManager.GetString("FoldersSelector_MacOS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to But, ya know... 👉👈... I can make mistakes just like anyone else..
        /// </summary>
        internal static string FoldersSelector_ManualSelection_OnboardingHeading_1 {
            get {
                return ResourceManager.GetString("FoldersSelector_ManualSelection_OnboardingHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can change any of these if they&apos;re wrong..
        /// </summary>
        internal static string FoldersSelector_ManualSelection_OnboardingHeading_2 {
            get {
                return ResourceManager.GetString("FoldersSelector_ManualSelection_OnboardingHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Operating System.
        /// </summary>
        internal static string FoldersSelector_OperatingSystem {
            get {
                return ResourceManager.GetString("FoldersSelector_OperatingSystem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Paths.
        /// </summary>
        internal static string FoldersSelector_ResetPaths {
            get {
                return ResourceManager.GetString("FoldersSelector_ResetPaths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The EA App.
        /// </summary>
        internal static string FoldersSelector_TheEAApp {
            get {
                return ResourceManager.GetString("FoldersSelector_TheEAApp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4 is installed..
        /// </summary>
        internal static string FoldersSelector_TS4_Installed {
            get {
                return ResourceManager.GetString("FoldersSelector_TS4_Installed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4 is not installed..
        /// </summary>
        internal static string FoldersSelector_TS4_NotInstalled {
            get {
                return ResourceManager.GetString("FoldersSelector_TS4_NotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to User Data Folder.
        /// </summary>
        internal static string FoldersSelector_UserDataFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_UserDataFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bruh... 🤦... there&apos;s not even a folder there..
        /// </summary>
        internal static string FoldersSelector_ValidateFolder_DoesNotExist {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateFolder_DoesNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That&apos;s not a valid The Sims 4 installation. 🙄.
        /// </summary>
        internal static string FoldersSelector_ValidateInstallationFolder_NoBinary {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateInstallationFolder_NoBinary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 👏 Very ambitious for taking me right to your Mods folder, but I actually need your User Data Folder (go up one, please!)..
        /// </summary>
        internal static string FoldersSelector_ValidateUserDataFolder_ModsFolder {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateUserDataFolder_ModsFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hey, Silly! That&apos;s not your Sims 4 User Data Folder. 😏 Or you need to launch the game once and try again....
        /// </summary>
        internal static string FoldersSelector_ValidateUserDataFolder_NoOptionsIni {
            get {
                return ResourceManager.GetString("FoldersSelector_ValidateUserDataFolder_NoOptionsIni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valve Steam.
        /// </summary>
        internal static string FoldersSelector_ValveSteam {
            get {
                return ResourceManager.GetString("FoldersSelector_ValveSteam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Windows.
        /// </summary>
        internal static string FoldersSelector_Windows {
            get {
                return ResourceManager.GetString("FoldersSelector_Windows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Catalog.
        /// </summary>
        internal static string Home_Catalog_Label {
            get {
                return ResourceManager.GetString("Home_Catalog_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Editor.
        /// </summary>
        internal static string Home_ManifestEditor_Label {
            get {
                return ResourceManager.GetString("Home_ManifestEditor_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Health.
        /// </summary>
        internal static string Home_ModHealth_Label {
            get {
                return ResourceManager.GetString("Home_ModHealth_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sample UI.
        /// </summary>
        internal static string Home_SampleUI_Label {
            get {
                return ResourceManager.GetString("Home_SampleUI_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Analyzing Topology.
        /// </summary>
        internal static string HUD_AnalyzingTopology_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_AnalyzingTopology_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m taking a closer look at your package load order and reviewing how your mods are interacting with each other to see if I need to warn you about anything. 😏.
        /// </summary>
        internal static string HUD_AnalyzingTopology_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_AnalyzingTopology_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Byte Code Files.
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of compiled Python byte code files I found in script archives in your Mods folder..
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Script Mods are disabled in your Game Options, these compiled Python byte code files will not be loaded and executed by The Sims 4..
        /// </summary>
        internal static string HUD_ByteCodeFiles_Tip_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_ByteCodeFiles_Tip_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cataloging ETA.
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is my best guess as to how much longer this process is going to take. It will fluctuate a bit as I progress, but less so as I near the end of the list of files..
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estimating.
        /// </summary>
        internal static string HUD_CatalogingETA_Tip_Estimating {
            get {
                return ResourceManager.GetString("HUD_CatalogingETA_Tip_Estimating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cataloging Mods.
        /// </summary>
        internal static string HUD_CatalogingMods_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_CatalogingMods_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m currently combing through the files in your Mods folder and scribbling down notes, don&apos;t mind me. 😏.
        /// </summary>
        internal static string HUD_CatalogingMods_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_CatalogingMods_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Composing Manifests.
        /// </summary>
        internal static string HUD_ComposingManifests_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ComposingManifests_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s probably best that I do not actively read your Mods folder while I&apos;m also... writing to it? I&apos;ll resume cataloging as soon as these manifests are written. 😏.
        /// </summary>
        internal static string HUD_ComposingManifests_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ComposingManifests_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game Version.
        /// </summary>
        internal static string HUD_GameVersion_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_GameVersion_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the current version of The Sims 4 you have installed..
        /// </summary>
        internal static string HUD_GameVersion_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_GameVersion_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packages.
        /// </summary>
        internal static string HUD_Packages_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of packages I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_Packages_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Mods are disabled in your Game Options, these packages will not be loaded by The Sims 4..
        /// </summary>
        internal static string HUD_Packages_Tip_Description_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_Packages_Tip_Description_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Python Scripts.
        /// </summary>
        internal static string HUD_PythonScripts_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;em&gt;Creator&apos;s Note: While The Sims 4 will work with Python scripts, it does so by interpretting them. Maxis&apos; SmartSim engine &lt;strong&gt;does not&lt;/strong&gt; Just-in-Time compile Python scripts in script archives. This means they will underperform &lt;strong&gt;considerably&lt;/strong&gt;. If these are your script archives, strongly consider compiling their scripts to byte code using Python 3.7.&lt;/em&gt;.
        /// </summary>
        internal static string HUD_PythonScripts_Tip_CreatorsNote {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_CreatorsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of &lt;strong&gt;uncompiled&lt;/strong&gt; Python scripts I found in script archives in your Mods folder..
        /// </summary>
        internal static string HUD_PythonScripts_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_PythonScripts_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resources.
        /// </summary>
        internal static string HUD_Resources_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of resources in the packages I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_Resources_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;em&gt;Creator&apos;s Note: This sum does not account for resource overrides. It is a strict, &quot;dumb sum&quot;.&lt;/em&gt;.
        /// </summary>
        internal static string HUD_Resources_Tip_Description_CreatorsNote {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description_CreatorsNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Mods are disabled in your Game Options, these resources will not be loaded by The Sims 4..
        /// </summary>
        internal static string HUD_Resources_Tip_Description_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_Resources_Tip_Description_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Archives.
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the number of script archives I was able to catalog in your Mods folder..
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because Script Mods are disabled in your Game Options, these script archives will not be opened and executed by The Sims 4..
        /// </summary>
        internal static string HUD_ScriptArchives_Tip_ModsDisabled {
            get {
                return ResourceManager.GetString("HUD_ScriptArchives_Tip_ModsDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sleeping.
        /// </summary>
        internal static string HUD_Sleeping_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Sleeping_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s probably best that I do not actively read your Mods folder while you&apos;re playing to maximize your computer&apos;s resources for the game itself. I&apos;ll wake up as soon as you exit the game. 😏.
        /// </summary>
        internal static string HUD_Sleeping_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Sleeping_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting.
        /// </summary>
        internal static string HUD_Waiting_Tip_Caption {
            get {
                return ResourceManager.GetString("HUD_Waiting_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m just waiting for activity in your Mods folder to die down and then I&apos;ll have a look. 😏.
        /// </summary>
        internal static string HUD_Waiting_Tip_Description {
            get {
                return ResourceManager.GetString("HUD_Waiting_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to start the process of requesting help with your game from a Community Support Venue..
        /// </summary>
        internal static string MainLayout_AskForHelp_Tip {
            get {
                return ResourceManager.GetString("MainLayout_AskForHelp_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;re looking for help with a particular mod, see if it&apos;s listed in the &lt;div class=&quot;mud-chip-container&quot;&gt;&lt;div tabindex=&quot;-1&quot; class=&quot;mud-chip mud-chip-outlined mud-chip-size-small mud-chip-color-default mud-chip-label&quot;&gt;&lt;svg class=&quot;mud-icon-root mud-svg-icon mud-icon-size-small mud-chip-icon&quot; focusable=&quot;false&quot; viewBox=&quot;0 0 24 24&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot;&gt;{0}&lt;/svg&gt;&lt;span class=&quot;mud-chip-content&quot;&gt;Catalog&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; first. If it is, use the &lt;div class=&quot;mud-chip-container&quot;&gt;&lt;div tabindex=&quot;-1&quot; class=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string MainLayout_AskForHelp_Tip_ModGuidance {
            get {
                return ResourceManager.GetString("MainLayout_AskForHelp_Tip_ModGuidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to clear the game&apos;s cache files..
        /// </summary>
        internal static string MainLayout_ClearCache_Tip {
            get {
                return ResourceManager.GetString("MainLayout_ClearCache_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;d like to help you, but there simply aren&apos;t any cache files to clear at the moment..
        /// </summary>
        internal static string MainLayout_ClearCache_Tip_AlreadyClear {
            get {
                return ResourceManager.GetString("MainLayout_ClearCache_Tip_AlreadyClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t just do this willy-nilly, since it will cause your game to load more slowly the next time it starts as it rebuilds the cache. I&apos;ll change the color of this button when it&apos;s important that we clear the cache..
        /// </summary>
        internal static string MainLayout_ClearCache_Tip_Clearable {
            get {
                return ResourceManager.GetString("MainLayout_ClearCache_Tip_Clearable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, Chief, the cache can&apos;t be cleared while it&apos;s in use! 🫢 You&apos;ll need to quit the game first..
        /// </summary>
        internal static string MainLayout_ClearCache_Tip_Sleeping {
            get {
                return ResourceManager.GetString("MainLayout_ClearCache_Tip_Sleeping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game&apos;s cache files are currently stale. You should clear them to avoid anomalies and glitches..
        /// </summary>
        internal static string MainLayout_ClearCache_Tip_Stale {
            get {
                return ResourceManager.GetString("MainLayout_ClearCache_Tip_Stale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manually Toggle Light/Dark Mode.
        /// </summary>
        internal static string MainLayout_DevTools_ThemeManager_ToggleMode_Tip {
            get {
                return ResourceManager.GetString("MainLayout_DevTools_ThemeManager_ToggleMode_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Manual Control of Light/Dark Mode.
        /// </summary>
        internal static string MainLayout_DevTools_ThemeManager_ToggleModeControl_Tip {
            get {
                return ResourceManager.GetString("MainLayout_DevTools_ThemeManager_ToggleModeControl_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to open your Downloads folder..
        /// </summary>
        internal static string MainLayout_OpenDownloadsFolder_Tip {
            get {
                return ResourceManager.GetString("MainLayout_OpenDownloadsFolder_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click here to open your Mods folder..
        /// </summary>
        internal static string MainLayout_OpenModsFolder_Tip {
            get {
                return ResourceManager.GetString("MainLayout_OpenModsFolder_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hey, I&apos;m giving your Mods folder its much needed privacy while the game is running. 🫵 You should strongly consider doing the same!.
        /// </summary>
        internal static string MainLayout_OpenModsFolder_Tip_Sleeping {
            get {
                return ResourceManager.GetString("MainLayout_OpenModsFolder_Tip_Sleeping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ask for Help.
        /// </summary>
        internal static string MainMenu_AskForHelp_Label {
            get {
                return ResourceManager.GetString("MainMenu_AskForHelp_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for Update.
        /// </summary>
        internal static string MainMenu_CheckForUpdate_Label {
            get {
                return ResourceManager.GetString("MainMenu_CheckForUpdate_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlumbBuddy is Up to Date.
        /// </summary>
        internal static string MainMenu_CheckForUpdate_UpToDate_Caption {
            get {
                return ResourceManager.GetString("MainMenu_CheckForUpdate_UpToDate_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re running the most current stable version. 😁.
        /// </summary>
        internal static string MainMenu_CheckForUpdate_UpToDate_Text {
            get {
                return ResourceManager.GetString("MainMenu_CheckForUpdate_UpToDate_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear Cache.
        /// </summary>
        internal static string MainMenu_ClearCache_Label {
            get {
                return ResourceManager.GetString("MainMenu_ClearCache_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close Window.
        /// </summary>
        internal static string MainMenu_CloseWindow_Label {
            get {
                return ResourceManager.GetString("MainMenu_CloseWindow_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Reacquainted?.
        /// </summary>
        internal static string MainMenu_DevTools_GetReacquainted_Caution_Caption {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_GetReacquainted_Caution_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Going through that process again will reset all of your preferences. I will forget who Peter Par-- I mean-- you are. It will really be as though you just installed me for the first time, and we&apos;ll have to get to know each other all over again. Be sure that&apos;s what you want before you continue..
        /// </summary>
        internal static string MainMenu_DevTools_GetReacquainted_Caution_Text {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_GetReacquainted_Caution_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Reacquainted.
        /// </summary>
        internal static string MainMenu_DevTools_GetReacquainted_Label {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_GetReacquainted_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dev Tools.
        /// </summary>
        internal static string MainMenu_DevTools_Label {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Cache.
        /// </summary>
        internal static string MainMenu_DevTools_OpenCache_Label {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_OpenCache_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Local Storage.
        /// </summary>
        internal static string MainMenu_DevTools_OpenLocalStorage_Label {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_OpenLocalStorage_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An inversion of control change just occurred which cannot take effect until the application is restarted..
        /// </summary>
        internal static string MainMenu_DevTools_Snack_InversionOfControlChange {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Snack_InversionOfControlChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dev Tools locked. 🔒 I&apos;ll still help you with your mods, but please don&apos;t play with my heart. 🥲.
        /// </summary>
        internal static string MainMenu_DevTools_Snack_Locked {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Snack_Locked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Marry me, you beautiful human. Dev Tools unlocked! 🔓.
        /// </summary>
        internal static string MainMenu_DevTools_Snack_Unlocked {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Snack_Unlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Aww, I love you, too!.
        /// </summary>
        internal static string MainMenu_DevTools_Snack_Unlocking_1 {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Snack_Unlocking_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🤚 Be careful, you&apos;re about to start a relationship..
        /// </summary>
        internal static string MainMenu_DevTools_Snack_Unlocking_2 {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_Snack_Unlocking_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Theme Manager?.
        /// </summary>
        internal static string MainMenu_DevTools_ToggleThemeManager_Caution_Caption {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_ToggleThemeManager_Caution_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling the Theme Manager impacts PlumbBuddy&apos;s performance. You should probably only do this if you&apos;re 🍒..
        /// </summary>
        internal static string MainMenu_DevTools_ToggleThemeManager_Caution_Text {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_ToggleThemeManager_Caution_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Theme Manager.
        /// </summary>
        internal static string MainMenu_DevTools_ToggleThemeManager_Label {
            get {
                return ResourceManager.GetString("MainMenu_DevTools_ToggleThemeManager_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Downloads Folder.
        /// </summary>
        internal static string MainMenu_OpenDownloadsFolder_Label {
            get {
                return ResourceManager.GetString("MainMenu_OpenDownloadsFolder_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open Mods Folder.
        /// </summary>
        internal static string MainMenu_OpenModsFolder_Label {
            get {
                return ResourceManager.GetString("MainMenu_OpenModsFolder_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string MainMenu_Settings_Label {
            get {
                return ResourceManager.GetString("MainMenu_Settings_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are You Sure?.
        /// </summary>
        internal static string MainMenu_Shutdown_Caution_Caption {
            get {
                return ResourceManager.GetString("MainMenu_Shutdown_Caution_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I can&apos;t monitor your Mods folder while I&apos;m shut down. You won&apos;t receive any alerts about potential problems until you start me up again..
        /// </summary>
        internal static string MainMenu_Shutdown_Caution_Text {
            get {
                return ResourceManager.GetString("MainMenu_Shutdown_Caution_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown PlumbBuddy.
        /// </summary>
        internal static string MainMenu_Shutdown_Label {
            get {
                return ResourceManager.GetString("MainMenu_Shutdown_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The friendly helper for Sims 4 mods.
        /// </summary>
        internal static string MainMenu_TagLine {
            get {
                return ResourceManager.GetString("MainMenu_TagLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (Version {0}).
        /// </summary>
        internal static string MainMenu_Version {
            get {
                return ResourceManager.GetString("MainMenu_Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add subsumed hash from mod file....
        /// </summary>
        internal static string ManifestComponentEditor_AddSubsumedHashFromModFile_Local {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_AddSubsumedHashFromModFile_Local", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since each file in your mod will have its own manifest resource, it can technically have a different name if you want it to. This can be good for specifically labeling add-ons. It would probably be smart, however, to still include the full name of your mod, e.g. Vacuum Clean the Cats: Discover University Support..
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Component Name.
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (type a specific name for this component if you want).
        /// </summary>
        internal static string ManifestComponentEditor_ComponentName_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ComponentName_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Exclusivity** is globally scoped in the mod load order. Make sure to include elements uniquely identifying your mod if other mods should not be considered. For example:
        ///&gt; vyxated - Chalk&apos;d UI - Support - TMEX - Smarter Pie Menu.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Guidance {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Guidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only one file with the same exclusivity will be permitted. If PlumbBuddy discovers multiple manifests in the same Mods folder with the same exclusivity, this will generate a warning for the player. Use this to mark mod files that are incompatible with each other, such as when they needed to select one package or another depending on whether they have a pack or another mod installed..
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exclusivities.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type the name of an exclusivity here and press enter.
        /// </summary>
        internal static string ManifestComponentEditor_Exclusivities_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_Exclusivities_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if the presence of a mod manifest hash in the load order indicates the player has installed another mod..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Hash Available.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (hash of the mod&apos;s manifest in hex format).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashAvailable_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashAvailable_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if the absence of a mod manifest hash in the load order indicates the player has not installed another mod..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Hash Unavailable.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (hash of the mod&apos;s manifest in hex format).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfHashUnavailable_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfHashUnavailable_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (use a pack code like EP01 for Get to Work).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has been installed by the player..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Pack Available.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for a pack).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackAvailable_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackAvailable_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (use a pack code like SP46 for Home Chef Hustle).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instructs agents to ignore this requirement if an official The Sims 4 pack from Electronic Arts has not been installed by the player..
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore if Pack Unavailable.
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for a pack).
        /// </summary>
        internal static string ManifestComponentEditor_IgnoreIfPackUnavailable_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IgnoreIfPackUnavailable_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to My mod requires this file to work properly — it is not an optional add-on to suit the player&apos;s preferences..
        /// </summary>
        internal static string ManifestComponentEditor_IsRequired_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_IsRequired_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because this component of your mod is a package file, its manifest will be will be a snippet tuning resource in your package. This is the name of that resource and it should be unique. I will generate the full instance for the snippet tuning resource on my own using the Sims 4 modding community standard implementation of the 64-bit Fowler–Noll–Vo hash function with the highest-order bit set..
        /// </summary>
        internal static string ManifestComponentEditor_ManifestSnippetTuningResourceName_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ManifestSnippetTuningResourceName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Snippet Tuning Resource Name.
        /// </summary>
        internal static string ManifestComponentEditor_ManifestSnippetTuningResourceName_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_ManifestSnippetTuningResourceName_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, the player must have at least one file using this requirement identifier. Requirement Identifiers are scoped only to your mod. You don&apos;t need to worry about making them globally unique..
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirement Identifier.
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (currently independently required).
        /// </summary>
        internal static string ManifestComponentEditor_RequirementIdentifier_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_RequirementIdentifier_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the hashes of previous version of this mod file. The manifest keeps them so that if I&apos;m checking to see if a player has your mod installed because another mod requires it, the other mod requiring an older version of your mod is not a problem. However, if you make breaking changes in this mod file you should probably clear these out so that it will be obvious that your newer version isn&apos;t going to work well with the other mod. Otherwise, it&apos;s best to leave this field alone and let me manage it for  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_HelperText {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subsumed Hashes.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_Label {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a hex-formatted SHA 256 manifest hash here and press enter.
        /// </summary>
        internal static string ManifestComponentEditor_SubsumedHashes_Placeholder {
            get {
                return ResourceManager.GetString("ManifestComponentEditor_SubsumedHashes_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had manifests that *did not need* to be updated:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ManifestsNotUpdated {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ManifestsNotUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had manifests that *needed* to be updated:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ManifestsUpdated {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ManifestsUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following files had no scaffolding and were therefore skipped:
        ///{0}.
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Report_ModFilesNotScaffolded {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Report_ModFilesNotScaffolded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Processing &lt;strong&gt;{0}&lt;/strong&gt; (mod file &lt;strong&gt;{1:n0}&lt;/strong&gt; of &lt;strong&gt;{2:n0}&lt;/strong&gt;).
        /// </summary>
        internal static string ManifestEditor_BatchUpdate_Status {
            get {
                return ResourceManager.GetString("ManifestEditor_BatchUpdate_Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Point of No Return.
        /// </summary>
        internal static string ManifestEditor_Caution_ConfirmWithWarnings_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_ConfirmWithWarnings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You *still* have **unresolved warnings** regarding your mod&apos;s manifest. I *can* proceed with these issues if you think I&apos;m mistaken, but *you are responsible for ignoring these warnings if I&apos;m not*..
        /// </summary>
        internal static string ManifestEditor_Caution_ConfirmWithWarnings_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_ConfirmWithWarnings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Cannot Be Undone.
        /// </summary>
        internal static string ManifestEditor_Caution_DuplicateComponentSettings_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_DuplicateComponentSettings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I am about to apply the component settings on screen now to every mod file you have checked in the list..
        /// </summary>
        internal static string ManifestEditor_Caution_DuplicateComponentSettings_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_DuplicateComponentSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to cancel?.
        /// </summary>
        internal static string ManifestEditor_Caution_OfferToCancel_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_OfferToCancel_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll discard any changes you&apos;ve made to this manifest and go back to the beginning of the process..
        /// </summary>
        internal static string ManifestEditor_Caution_OfferToCancel_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_OfferToCancel_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This Cannot Be Undone.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveModFiles_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveModFiles_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If I remove the selected components of your mod and you change your mind, you&apos;ll need to click cancel on the bottom of the window and start the whole process over again or add them back manually..
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveModFiles_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveModFiles_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure?.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You&apos;re about to remove your mod&apos;s requirement of {0}. If you change your mind you&apos;ll have to **Cancel** and start from scratch or add it back.&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/qxCYGGPbQp3yj5aSsL&quot; width=&quot;480&quot; height=&quot;360&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/thelonelyisland-season-3-i-think-you-should-leave-itysl-qxCYGGPbQp3yj5aSsL&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to this mod.
        /// </summary>
        internal static string ManifestEditor_Caution_RemoveRequiredMod_Text_ModNameFallback {
            get {
                return ResourceManager.GetString("ManifestEditor_Caution_RemoveRequiredMod_Text_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate Settings.
        /// </summary>
        internal static string ManifestEditor_Components_DuplicateSettings_Tip_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_DuplicateSettings_Tip_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate these settings, applying them to multiple mod files at once..
        /// </summary>
        internal static string ManifestEditor_Components_DuplicateSettings_Tip_Description {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_DuplicateSettings_Tip_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are all the files we currently consider a part of your mod..
        /// </summary>
        internal static string ManifestEditor_Components_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🏗️ Are we leaving anything out?.
        /// </summary>
        internal static string ManifestEditor_Components_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Components.
        /// </summary>
        internal static string ManifestEditor_Components_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Components_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ☝️ Please wait just a moment..
        /// </summary>
        internal static string ManifestEditor_Composing_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🚧 Manifest Composition is in progress. 🚧.
        /// </summary>
        internal static string ManifestEditor_Composing_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adding cross-reference requirements to `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_AddingCrossReferenceRequirements {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_AddingCrossReferenceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Computing manifest hash for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_ComputingHash {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_ComputingHash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creating scaffolding for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_CreatingScaffolding {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_CreatingScaffolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All component manifests have been updated and scaffolding has been written.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_Finished {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_Finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generating cross-reference requirements for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_GeneratingCrossReferenceRequirements {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_GeneratingCrossReferenceRequirements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing manfiest for `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_InitializingManifest {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_InitializingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removing any manifests from `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_RemovingManifests {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_RemovingManifests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Saving manifest to `{0}`.
        /// </summary>
        internal static string ManifestEditor_Composing_Status_SavingManifest {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Status_SavingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your Mod&apos;s Manifests are Now Up to Date.
        /// </summary>
        internal static string ManifestEditor_Composing_Success_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Success_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your mod&apos;s files now contain all the information I would need to:
        ///* show players a complete catalog entry for it;
        ///* tell script mod creators about your mod when a player has it installed; and, most importantly,
        ///* help players with installation problems involving it.
        ///
        ///##### Manifest Hashes Need to be Maintained
        ///*Please remember to come back here and have me update your mod&apos;s manifests if you change anything*. I promise it won&apos;t take long and you can even use the **UPDATE ALL THE MANIFESTS IN MODS IN A  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Composing_Success_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Composing_Success_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoops, it looks like you used the `{0}` **Manifest Snippet Tuning Resource Name** for each of the following mod files when they each need to be unique. You can go back to the **Components** step to fix this.
        ///{1}.
        /// </summary>
        internal static string ManifestEditor_Confirm_Error_NonUniqueManifestSnippetTuningNames {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Error_NonUniqueManifestSnippetTuningNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🛑 Woah, there, Chief! We can&apos;t quite do this... ⛔.
        /// </summary>
        internal static string ManifestEditor_Confirm_ErrorHeading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ErrorHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 👈 It looks like you need to go back and fix something..
        /// </summary>
        internal static string ManifestEditor_Confirm_ErrorHeading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ErrorHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        internal static string ManifestEditor_Confirm_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your mod requires packs which some players may not have, but might purchase specifically to use with *your mod*, and yet, you have not given me an **EA Promo Code**. If you do have one, you really shouldn&apos;t be leaving money on the table like this, friend. Consider doing yourself a solid, heading back to the **Requirements** step, and filling in that code.&lt;br /&gt;
        ///If you don&apos;t have one, but you&apos;re interested in getting a commission for all the packs your awesome mod is about to help EA sell, please allow me t [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Confirm_Note_BlankPromoCode {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Note_BlankPromoCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📃 If I had any notes or concerns, I put them below. If the area&apos;s blank then... 🤷 no notes..
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click &lt;div class=&quot;mud-chip-container&quot;&gt;&lt;div tabindex=&quot;-1&quot; class=&quot;mud-chip mud-chip-filled mud-chip-size-large mud-chip-color-tertiary mud-chip-label&quot;&gt;&lt;span class=&quot;mud-chip-content&quot;&gt;FINISH&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; to update the manifest in your {0} and they&apos;ll be ready to go. 🚀.
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to mod file.
        /// </summary>
        internal static string ManifestEditor_Confirm_ReadyHeading_2_ModFile {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_ReadyHeading_2_ModFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your mod does not have a valid download page URL!* You can go back to the **Details** step and type one in, and probably should because if you don&apos;t:
        ///* If a problem comes up and I need to discuss your mod with a player it will be awkward because I&apos;ll have no place to send them on the web if they need to download a fresh copy or an update.
        ///* If your mod is ever referenced as a dependency and then a player doesn&apos;t have it or needs to update it, that conversation gets even more awkward because... again... w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankDownloadPageUrl {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankDownloadPageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your `{0}` mod file is a package with a **Manifest Snippet Tuning Resource Name** which you left either blank or just as white space. Since I have to have something substantive and unique there, if we continue I&apos;m going to generate something for you. If you&apos;d rather I didn&apos;t, you can go back to the **Components** step and fill it in for yourself..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankManifestSnippetTuningName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankManifestSnippetTuningName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your mod has no name!* You can go back to the **Details** step and type one in, and probably should because if you don&apos;t:
        ///* If a problem comes up and I need to discuss your mod with a player it will be awkward because I&apos;ll have to refer to file names when I could be using a more familiar name.
        ///* If your mod is ever referenced as a dependency and then a player doesn&apos;t have it, that conversation gets even more awkward because I have to discuss them getting it without telling them what it&apos;s called..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankModName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your **{0}** required mod doesn&apos;t have a valid download page URL!* You can go back to the **Requirements** step and type one in, and probably should because if you don&apos;t and a problem comes up and I need to discuss your mod&apos;s requirement with a player, it will be awkward because the only place to send them on the web to try to find a fresh copy of the requirement will be your mod&apos;s download page. Not the best user experience..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankRequiredModDownloadPageUrl {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankRequiredModDownloadPageUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *Your **{0}** required mod has no name!* You can go back to the **Requirements** step and type one in, and probably should because if you don&apos;t and a problem comes up and I need to discuss your mod&apos;s requirements with a player, it&apos;s gonna be very vague. *Did you notice how I just had to tell you which requirement has this problem **with a number?***.
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_BlankRequiredModName {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_BlankRequiredModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to *You haven&apos;t specified any creators.* Look, I know stepping into the limelight can be a bit daunting... but you deserve recognition for what you&apos;ve done! You can go back to the **Details** step and fill in your own name and the names of anyone who worked with you on this mod..
        /// </summary>
        internal static string ManifestEditor_Confirm_Warning_NoCreators {
            get {
                return ResourceManager.GetString("ManifestEditor_Confirm_Warning_NoCreators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can use this field to establish feature flags. When other creators reference your mod as a requirement, they will be able to specify which features they need. This can be seen as an alternative to version ranges..
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a feature name here and press enter.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Features_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Features_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🕹️ Entertaining the player ourselves isn&apos;t the only way we can bring value..
        /// </summary>
        internal static string ManifestEditor_CrossMod_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sometimes it&apos;s helping others shine. 💁‍♀️.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cross-Mod.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quick Semantic Versioning Links.
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I made changes to my mod which will break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_MajorLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_MajorLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I added features to my mod in a way which will not break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_MinorLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_MinorLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I made other changes to my mod in a way which will not break other mods that require it..
        /// </summary>
        internal static string ManifestEditor_CrossMod_SemanticVersioning_PatchLink {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_SemanticVersioning_PatchLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version.
        /// </summary>
        internal static string ManifestEditor_CrossMod_Version_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_Version_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I maintain versions of my mod..
        /// </summary>
        internal static string ManifestEditor_CrossMod_VersionToggle_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_CrossMod_VersionToggle_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So uhh... 🕵️‍♂️ who&apos;s responsible for this?.
        /// </summary>
        internal static string ManifestEditor_Details_Creators_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Creators_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter a creator name here and press enter.
        /// </summary>
        internal static string ManifestEditor_Details_Creators_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Creators_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This should be a web page on which links or buttons are available to download the mod files for THIS MOD..
        /// </summary>
        internal static string ManifestEditor_Details_DownloadPageUrl_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_DownloadPageUrl_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Page URL.
        /// </summary>
        internal static string ManifestEditor_Details_DownloadPageUrl_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_DownloadPageUrl_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, let&apos;s get started nice and easy... 😅.
        /// </summary>
        internal static string ManifestEditor_Details_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📝 How about we cover the basics first?.
        /// </summary>
        internal static string ManifestEditor_Details_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Details.
        /// </summary>
        internal static string ManifestEditor_Details_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What&apos;s your mod called? Pretty simple..
        /// </summary>
        internal static string ManifestEditor_Details_ModName_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_ModName_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Web Browser.
        /// </summary>
        internal static string ManifestEditor_Details_OpenInWebBrowser_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_OpenInWebBrowser_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because making players click through multiple pages to find your download is *rude and in bad form*, **DO NOT LINK TO:**
        ///* your top-level domain (unless you got one only for this mod or its index page has the download for your mods files);
        ///* your Patreon feed (as opposed to a Patreon post devoted to this mod);
        ///* your profile on a hosting website such as Mod the Sims, CurseForge, or The Sims Resource (as opposed to the download page for this mod on that site); or,
        ///* any other page which does not feature  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Popover_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Popover_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you are concerned about the stability of the URL you currently have for any reason, consider [applying for a modding community sponsored redirect URL](https://plumbbuddy.app/community-services/redirect-hosting) which you will be able to change later to suit your needs..
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Popover_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Popover_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See Things Not To Do.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsNotToDo_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsNotToDo_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is completely okay if on this same page you *also*:
        ///* feature your other modding content;
        ///* feature links to other creators;
        ///* display ads to the player; and,
        ///* solicit donations from the player—you should, you deserve it!—so long as they are not **required** to access your mod files outside the terms defined by [Electronic Arts&apos; Mods and Game Updates Policy for The Sims 4](https://help.ea.com/en-gb/help/the-sims/the-sims-4/mods-and-the-sims-4-game-updates/)..
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsToDo_Popover {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsToDo_Popover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See Things To Do.
        /// </summary>
        internal static string ManifestEditor_Details_SeeThingsToDo_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Details_SeeThingsToDo_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package corrupt, damaged, or locked.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessiblePackage_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessiblePackage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I was unable to read this file as a valid Maxis DataBase Packed File with exclusive access:
        ///`{1}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/1g2JyW7p6mtZc6bOEY&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/guavajuice-guava-juice-roi-1g2JyW7p6mtZc6bOEY&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessiblePackage_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessiblePackage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script archive corrupt, damaged, or locked.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessibleScriptArchive_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessibleScriptArchive_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I was unable to read this file as a valid ZIP archive with exclusive access:
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/3o72EYhVhAYFJ4rv68&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/ghostbustersmovies-ghostbusters-original-3o72EYhVhAYFJ4rv68&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_InaccessibleScriptArchive_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_InaccessibleScriptArchive_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something went wrong.
        /// </summary>
        internal static string ManifestEditor_Error_ManifestCompositionFailure_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ManifestCompositionFailure_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to While I was writing your manifests, an unexpected error occurred. I&apos;ve written it to my log file..
        /// </summary>
        internal static string ManifestEditor_Error_ManifestCompositionFailure_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ManifestCompositionFailure_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaffolding points to missing file.
        /// </summary>
        internal static string ManifestEditor_Error_ScaffoldingReferenceBroken_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ScaffoldingReferenceBroken_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you last updated the manifest in this mod, it had a file at this location which I failed to find. If you weren&apos;t expecting to see this message, you should probably investigate.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/6uGhT1O4sxpi8&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/awkward-pulp-fiction-john-travolta-6uGhT1O4sxpi8&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_ScaffoldingReferenceBroken_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_ScaffoldingReferenceBroken_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a mod file first.
        /// </summary>
        internal static string ManifestEditor_Error_SelectAModFileFirst_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_SelectAModFileFirst_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A journey of a thousand miles begins with the first step. And this is gonna be like... *much quicker* than that..
        /// </summary>
        internal static string ManifestEditor_Error_SelectAModFileFirst_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_SelectAModFileFirst_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to new extension... who dis?.
        /// </summary>
        internal static string ManifestEditor_Error_UnrecognizedFileType_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_UnrecognizedFileType_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What even is this?
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/WRQBXSCnEFJIuxktnw&quot; width=&quot;480&quot; height=&quot;307&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/math-lady-meme-WRQBXSCnEFJIuxktnw&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ManifestEditor_Error_UnrecognizedFileType_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Error_UnrecognizedFileType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Images {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Images", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashing Elements.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Other Package Data.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_OtherPackageData {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_OtherPackageData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sim Data.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_SimData {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_SimData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String Tables.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_StringTables {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_StringTables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuning.
        /// </summary>
        internal static string ManifestEditor_Hashing_HashingElements_Tuning {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_HashingElements_Tuning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some players like to alter packages for their own purposes. 📦.
        /// </summary>
        internal static string ManifestEditor_Hashing_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🔐 We should talk about what you&apos;re comfortable with..
        /// </summary>
        internal static string ManifestEditor_Hashing_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I identify your mod&apos;s files on players&apos; computers by examining the contents of the files, *not* by trusting file names. This is because players can (and do) rename mod files to influence the game&apos;s mod load order. I need to know what things in your mod&apos;s files to consider in identifying your mod..
        /// </summary>
        internal static string ManifestEditor_Hashing_Info {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashing.
        /// </summary>
        internal static string ManifestEditor_Hashing_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lenient.
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moderate (Recommended).
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Strict.
        /// </summary>
        internal static string ManifestEditor_Hashing_Slider_TickMark_3 {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Slider_TickMark_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The inclination to increase this setting because the thought of players altering your mods upsets you is valid. But please do consider that some players may be using your mod in a language for which you do not provide a translation, for example, and arbitrary strictness here will punish them when that may not be your intention..
        /// </summary>
        internal static string ManifestEditor_Hashing_Warning {
            get {
                return ResourceManager.GetString("ManifestEditor_Hashing_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whole Lotta Noth&apos;n.
        /// </summary>
        internal static string ManifestEditor_Info_BatchUpdateNoModFilesManifested_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_BatchUpdateNoModFilesManifested_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None of the mod files examined had manifests to potentially be updated..
        /// </summary>
        internal static string ManifestEditor_Info_BatchUpdateNoModFilesManifested_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_BatchUpdateNoModFilesManifested_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So, a manifest but no scaffolding, eh?.
        /// </summary>
        internal static string ManifestEditor_Info_MissingScaffolding_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_MissingScaffolding_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are only a few reasons this might happen. In any case, you are seen.
        ///1. *You are* the original creator of this mod and you don&apos;t back up your files (in which case, for shame). You&apos;re going to have to re-add all of your mod&apos;s components without the scaffolding, but I will clean-up intramod requirements for you automatically as you go.
        ///2. You&apos;re a kind soul adopting an orphaned mod and the marmot smiles down upon you. If so, we do have [some potentially useful advice for you](https://plumbbuddy.app/co [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Info_MissingScaffolding_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_MissingScaffolding_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package is the result of multiple manifested packages which were merged.
        /// </summary>
        internal static string ManifestEditor_Info_SelectedMergedPackage_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_SelectedMergedPackage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Just so you&apos;re aware... this file has multiple manifests. Frankly, not the best. Don&apos;t worry, I&apos;ll tidy things up and leave it with just one when we finish here.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///From the available **Manifest Snippet Tuning Resource Names**, I selected `{1}`. You can change that if you want by selecting this file on the **Components** step.&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/8Fla28qk2RGlYa2nXr&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ManifestEditor_Info_SelectedMergedPackage_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Info_SelectedMergedPackage_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examining mod file.
        /// </summary>
        internal static string ManifestEditor_Loading_ExaminingModFile {
            get {
                return ResourceManager.GetString("ManifestEditor_Loading_ExaminingModFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading mod files.
        /// </summary>
        internal static string ManifestEditor_Loading_ReadingModFiles {
            get {
                return ResourceManager.GetString("ManifestEditor_Loading_ReadingModFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you like to copy this Batch Processing Report to your computer&apos;s clipboard?.
        /// </summary>
        internal static string ManifestEditor_Question_CopyBatchUpdateReportToClipboard_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Question_CopyBatchUpdateReportToClipboard_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Required Mod....
        /// </summary>
        internal static string ManifestEditor_Requirements_AddRequiredMod_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_AddRequiredMod_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If *your whole mod* will only work with the presence of other mods, even under certain conditions, let me know about it here.
        ///
        ///If only *parts* of your mod need to be present or not based on whether packs or other mods are present or not, the step to tell me about that was **Components**. But don&apos;t worry! You can always go back!.
        /// </summary>
        internal static string ManifestEditor_Requirements_AddRequiredMod_Popover {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_AddRequiredMod_Popover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🤔 We&apos;re all searching for fulfillment at the end of the day..
        /// </summary>
        internal static string ManifestEditor_Requirements_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to What does your mod &lt;strong&gt;need&lt;/strong&gt; to be happy? 😊.
        /// </summary>
        internal static string ManifestEditor_Requirements_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a pack code like GP12 for Werewolves and press enter.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are there any official The Sims 4 packs from Electronic Arts that will cause your mod to NOT WORK?.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Incompatible Packs.
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for packs).
        /// </summary>
        internal static string ManifestEditor_Requirements_IncompatiblePacks_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_IncompatiblePacks_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Requirements.
        /// </summary>
        internal static string ManifestEditor_Requirements_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you have been invited to the EA Creator Network, PlumbBuddy can give players your Promo Code to use at check-out when buying packs to use with your mod..
        /// </summary>
        internal static string ManifestEditor_Requirements_PromoCode_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_PromoCode_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EA Promo Code.
        /// </summary>
        internal static string ManifestEditor_Requirements_PromoCode_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_PromoCode_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Requirement.
        /// </summary>
        internal static string ManifestEditor_Requirements_RemoveRequirement_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RemoveRequirement_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type a pack code like GP08 for Realm of Magic and press enter.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Freeform_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Freeform_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Does your mod need any official The Sims 4 packs from Electronic Arts to work?.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_HelperText {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Packs.
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (click here to select/search for packs).
        /// </summary>
        internal static string ManifestEditor_Requirements_RequiredPacks_Selector_Placeholder {
            get {
                return ResourceManager.GetString("ManifestEditor_Requirements_RequiredPacks_Selector_Placeholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update all the Manifests in Mods in a Folder.
        /// </summary>
        internal static string ManifestEditor_Select_BatchUpdate_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_BatchUpdate_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click this button to select a folder and then update the manifests in every mod found in a recursive search of the folder. Any problems or warnings encountered by the Manifest Editor will immediately interrupt the process..
        /// </summary>
        internal static string ManifestEditor_Select_BatchUpdate_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_BatchUpdate_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check for scaffolding in a &quot;PlumbBuddy&quot; subfolder first..
        /// </summary>
        internal static string ManifestEditor_Select_CheckForScaffoldingLocation_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_CheckForScaffoldingLocation_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll check in both places either way, but you can use this switch to control where I look first..
        /// </summary>
        internal static string ManifestEditor_Select_CheckForScaffoldingLocation_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_CheckForScaffoldingLocation_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Let&apos;s start by selecting &lt;strong&gt;any&lt;/strong&gt; file for your mod.&lt;br /&gt;&lt;br /&gt;It doesn’t matter if it’s a package or a script archive. If there&apos;s more than one file for your mod, you can just pick the most prominent one, the first one you made, the one that’s first alphabetically, or pick one at random. Doesn’t really matter 🤷. You&apos;ll be able to specify any remaining files later in this process..
        /// </summary>
        internal static string ManifestEditor_Select_Guidance {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Guidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Teach me about your mod so I can help players (and other creators) with it..
        /// </summary>
        internal static string ManifestEditor_Select_Heading_1 {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It will be &lt;em&gt;manifestly&lt;/em&gt; awesome. 😏.
        /// </summary>
        internal static string ManifestEditor_Select_Heading_2 {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select.
        /// </summary>
        internal static string ManifestEditor_Select_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any File from Your Mod.
        /// </summary>
        internal static string ManifestEditor_Select_Picker_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_Picker_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write scaffolding in a &quot;PlumbBuddy&quot; subfolder to keep my mod files&apos; folder more orderly..
        /// </summary>
        internal static string ManifestEditor_Select_WriteScaffoldingLocation_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_WriteScaffoldingLocation_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ll clean up any old, unneeded scaffolding files left behind if you change this setting..
        /// </summary>
        internal static string ManifestEditor_Select_WriteScaffoldingLocation_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_Select_WriteScaffoldingLocation_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Successfully Copied to Clipboard.
        /// </summary>
        internal static string ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Caption {
            get {
                return ResourceManager.GetString("ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste it where you like. 😏.
        /// </summary>
        internal static string ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Text {
            get {
                return ResourceManager.GetString("ManifestEditor_Success_BatchUpdateReportCopiedToClipboard_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use PlumbBuddy.app Public Pack Catalog when entering Pack Codes.
        /// </summary>
        internal static string ManifestEditor_UsePublicPackCatalog_Label {
            get {
                return ResourceManager.GetString("ManifestEditor_UsePublicPackCatalog_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switching this on will cause fields which expect Pack Codes to connect to the PlumbBuddy.app web site, allowing you to search and select from its Public Pack Catalog instead of having to know the codes yourself. This feature requires an Internet connection..
        /// </summary>
        internal static string ManifestEditor_UsePublicPackCatalog_Tip {
            get {
                return ResourceManager.GetString("ManifestEditor_UsePublicPackCatalog_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Mod File.
        /// </summary>
        internal static string ModFileSelector_SelectAModFile_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod file contains no manifests.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Error_NoManifests_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Error_NoManifests_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m sorry, but the mod file you selected doesn&apos;t contain any manifests. For technical reasons, it simply isn&apos;t safe to try to reference it in this manner. All you can do for now is *politely* ask the original creator to publish it with a manifest in their next release... and then wait **patiently**.
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/3oEjI8D0T5KXgPZrTW&quot; width=&quot;480&quot; height=&quot;269&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/summ [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Error_NoManifests_Text {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Error_NoManifests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod file contains multiple manifests.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Caption {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is embarassing, but I&apos;m going to have to ask you to select precisely which of the manifests this mod file contains that you mean because some bozo merged their files and didn&apos;t update the manifests. 🤦
        ///`{0}`&lt;br /&gt;&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/8Fla28qk2RGlYa2nXr&quot; width=&quot;480&quot; height=&quot;259&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;https://giphy.com/gifs/8Fla28qk2RGlYa2nXr&quot;&gt;via GIPHY&lt;/a&gt;&lt;/p&gt;.
        /// </summary>
        internal static string ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Text {
            get {
                return ResourceManager.GetString("ModFileSelector_SelectAModFileManifest_Info_MultipleManifests_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no file at this location..
        /// </summary>
        internal static string ModFileSelector_Validate_FileNotFound {
            get {
                return ResourceManager.GetString("ModFileSelector_Validate_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is not a Maxis DBPF package or a TS4 script archive..
        /// </summary>
        internal static string ModFileSelector_Validate_InvalidFormat {
            get {
                return ResourceManager.GetString("ModFileSelector_Validate_InvalidFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Hash from Mod File....
        /// </summary>
        internal static string ModRequirementEditor_AddModFile_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_AddModFile_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a player installs your mod but does not have this requirement, these are the creators I may tell them about when describing the missing requirement to them..
        /// </summary>
        internal static string ModRequirementEditor_Creators_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Creators_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a player needs to download this mod, this is the page I will send them to in order to do so..
        /// </summary>
        internal static string ModRequirementEditor_DownloadPageUrl_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_DownloadPageUrl_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There should be one manifest hash per each mod file in the requirement. You should add one for each mod file in the required mod that you know your mod uses. Don&apos;t worry about the required mod&apos;s requirements. It&apos;s responsible for those considerations..
        /// </summary>
        internal static string ModRequirementEditor_Hashes_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Hashes_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hashes.
        /// </summary>
        internal static string ModRequirementEditor_Hashes_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Hashes_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If a player installs your mod but does not have this requirement, this is the name I will use to describe the missing requirement to them..
        /// </summary>
        internal static string ModRequirementEditor_Name_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_Name_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These are the features the required mod must offer in order for your requirement to be satisfied. This field exists just in case the required mod&apos;s creator ever removes a feature, I can guide the player through resolving the issue..
        /// </summary>
        internal static string ModRequirementEditor_RequiredFeatures_HelperText {
            get {
                return ResourceManager.GetString("ModRequirementEditor_RequiredFeatures_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Features.
        /// </summary>
        internal static string ModRequirementEditor_RequiredFeatures_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_RequiredFeatures_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select features based on a mod file manifest....
        /// </summary>
        internal static string ModRequirementEditor_SelectFeaturesBasedOnModFileManifest_Label {
            get {
                return ResourceManager.GetString("ModRequirementEditor_SelectFeaturesBasedOnModFileManifest_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I may be about to spook your Mac.
        /// </summary>
        internal static string OnboardingDialog_Caution_SpookingMacs_Caption {
            get {
                return ResourceManager.GetString("OnboardingDialog_Caution_SpookingMacs_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It&apos;s awesome that you&apos;re using me on your Mac! It does *a lot* to keep you safe and one of those things is to stop programs from randomly going into your Documents folder. Trouble is, that&apos;s where your mods are (or will be), so I pretty much need to do that.&lt;br /&gt;
        ///I&apos;m going to poke in there now. If macOS pauses me to ask you if it&apos;s cool, please tell it that it&apos;s okay for me to be in there.&lt;br /&gt;
        ///*Note: You can cancel this, but reading from this area on your computer is basically the reason I exist so I w [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string OnboardingDialog_Caution_SpookingMacs_Text {
            get {
                return ResourceManager.GetString("OnboardingDialog_Caution_SpookingMacs_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I hate to have to begin our relationship this way, but... 😔.
        /// </summary>
        internal static string OnboardingDialog_EULA_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_EULA_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I need you to say you won&apos;t sue my parents..
        /// </summary>
        internal static string OnboardingDialog_EULA_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_EULA_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 👇 Scroll to the bottom and click &lt;div class=&quot;mud-chip-container&quot;&gt;&lt;div tabindex=&quot;-1&quot; class=&quot;mud-chip mud-chip-filled mud-chip-size-medium mud-chip-color-primary mud-chip-label&quot;&gt;&lt;span class=&quot;mud-chip-content&quot;&gt;NEXT&lt;/span&gt;&lt;/div&gt;&lt;/div&gt; to agree and continue. 👉.
        /// </summary>
        internal static string OnboardingDialog_EULA_Heading_3 {
            get {
                return ResourceManager.GetString("OnboardingDialog_EULA_Heading_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EULA.
        /// </summary>
        internal static string OnboardingDialog_EULA_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_EULA_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Prepare for some Earth-shattering discoveries I&apos;ve made about your computer. 😆.
        /// </summary>
        internal static string OnboardingDialog_Folders_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Folders_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This information tells me where to find important folders..
        /// </summary>
        internal static string OnboardingDialog_Folders_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Folders_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folders.
        /// </summary>
        internal static string OnboardingDialog_Folders_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_Folders_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ☝️ Just a moment, I&apos;m taking a looking at your computer....
        /// </summary>
        internal static string OnboardingDialog_Folders_Loading {
            get {
                return ResourceManager.GetString("OnboardingDialog_Folders_Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to serve you best, it helps me to know what kind of player you are..
        /// </summary>
        internal static string OnboardingDialog_Introductions_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Introductions_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the colored circles or arrows below to choose..
        /// </summary>
        internal static string OnboardingDialog_Introductions_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Introductions_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Introductions.
        /// </summary>
        internal static string OnboardingDialog_Introductions_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_Introductions_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since it is less widespread than MCCC, many Support Venues will prefer its error logs a little less than those of MCCC. BE also makes a new report per error and freezes the game&apos;s clock while collecting information for reports..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_BE_Cons {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_BE_Cons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help you install TwistedMexi&apos;s Better Exceptions..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_BE_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_BE_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BE provides useful error logs without affecting game functions or story progression..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_BE_Pros {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_BE_Pros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error Logging Options.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogging_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogging_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Having at least one of these installed will provide us with better error logs to share with creators..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogging_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogging_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When your game or a mod logs an error, I&apos;ll let you know and we&apos;ll figure out where to take the error to get it looked at. Just so you know, this will be a Discord server. So, if you&apos;re unfamiliar with Discord or not interested in using it, you may want to turn this off..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogs_Description {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogs_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tell you about errors logged by the game or mods..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogs_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogs_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about Discord.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogs_LearnMore {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogs_LearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Helpful, but Optional.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ErrorLogs_Recommendation {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ErrorLogs_Recommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alrighty! You&apos;re almost all set, bud. 👍 Just a few more preferences....
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To promote Mod Health, what would you like me to do?.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MCCC does alter your story progression by default (e.g. causing NPC Sims to marry, have children, move, etc.). If this would bother you, you can prevent MCCC from doing this, but that can be unwieldy for inexperienced players..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_MCCC_Cons {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_MCCC_Cons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help you install Deaderpool&apos;s MC Command Center..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_MCCC_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_MCCC_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MCCC&apos;s logging is far more comprehensive than the game&apos;s and most Support Venues will happily review it..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_MCCC_Pros {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_MCCC_Pros", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because anti-virus software doesn&apos;t check for malware which can be in mods, TwistedMexi created ModGuard. Sometimes, creators&apos; accounts get hacked and dangerous mods are uploaded to sharing sites. Protect yourself with ModGuard..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ModGuard_Description {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ModGuard_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help you install TwistedMexi&apos;s ModGuard..
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ModGuard_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ModGuard_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn more about Mod Guard.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ModGuard_LearnMore {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ModGuard_LearnMore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;strong&gt;Strongly&lt;/strong&gt; Recommended.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Casual_ModGuard_Recommendation {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Casual_ModGuard_Recommendation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Health.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alright, Chief. I heard you, loud and clear. 🫡.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_NonCasual_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_NonCasual_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For what issues should I get your attention?.
        /// </summary>
        internal static string OnboardingDialog_ModHealth_NonCasual_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_ModHealth_NonCasual_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically check for updates.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_AutomaticallyCheckForUpdates_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_AutomaticallyCheckForUpdates_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Don&apos;t worry, I won&apos;t download or install anything without your consent. I&apos;ll just let you know when an update for me is available..
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_AutomaticallyCheckForUpdates_Tip {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_AutomaticallyCheckForUpdates_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is the creators list I will pre-fill-in for you when you&apos;re manifesting a mod for the first time..
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_DefaultCreators_HelperText {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_DefaultCreators_HelperText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Creators.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_DefaultCreators_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_DefaultCreators_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate global manifest package.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_GenerateGlobalManifestPackage_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_GenerateGlobalManifestPackage_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a package file that lets Mod Creators know what I know about your manifested mods. It&apos;s basically the modder equivalent of my Catalog tab. They can use this information to improve your experience in the game, not violate your privacy..
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_GenerateGlobalManifestPackage_Tip {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_GenerateGlobalManifestPackage_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 😁 Well, this is it. The last page. After this you&apos;ll be fully on board!.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ✔️ Do you want to change any of my default behaviors? ❌.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PlumbBuddy.
        /// </summary>
        internal static string OnboardingDialog_PlumbBuddy_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_PlumbBuddy_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some of your favorite Creators have given me beautiful makeovers. 💄.
        /// </summary>
        internal static string OnboardingDialog_Theme_Heading_1 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Theme_Heading_1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🤔 Will you decide for personal aesthetics or fandom reasons?.
        /// </summary>
        internal static string OnboardingDialog_Theme_Heading_2 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Theme_Heading_2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either way, how I look is up to you!.
        /// </summary>
        internal static string OnboardingDialog_Theme_Heading_3 {
            get {
                return ResourceManager.GetString("OnboardingDialog_Theme_Heading_3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme.
        /// </summary>
        internal static string OnboardingDialog_Theme_Label {
            get {
                return ResourceManager.GetString("OnboardingDialog_Theme_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Being Examined.
        /// </summary>
        internal static string Scan_CacheStaleness_AwaitingAnalysis_Caption {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_AwaitingAnalysis_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Clear.
        /// </summary>
        internal static string Scan_CacheStaleness_Clear_Caption {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Clear_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are no cache files at the moment. I mean... that&apos;s fine. The game&apos;s gonna load a little slower next time, but it&apos;s okay..
        /// </summary>
        internal static string Scan_CacheStaleness_Clear_Description_Casual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Clear_Description_Casual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are currently no cache files on disk..
        /// </summary>
        internal static string Scan_CacheStaleness_Clear_Description_NonCasual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Clear_Description_NonCasual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Fine.
        /// </summary>
        internal static string Scan_CacheStaleness_Fine_Caption {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Fine_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are cache files at the moment. They look fine to me, as cache files go. A little ordinary, but that&apos;s what you want in cache files!.
        /// </summary>
        internal static string Scan_CacheStaleness_Fine_Description_Casual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Fine_Description_Casual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cache files exist on disk in a normal state..
        /// </summary>
        internal static string Scan_CacheStaleness_Fine_Description_NonCasual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Fine_Description_NonCasual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Stale.
        /// </summary>
        internal static string Scan_CacheStaleness_Stale_Caption {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Stale_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear the cache.
        /// </summary>
        internal static string Scan_CacheStaleness_Stale_Clear_Label {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Stale_Clear_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uhh, these cache files might be like the kids from that Offspring song — as in &quot;not alright&quot;. We need to see to this and soon..
        /// </summary>
        internal static string Scan_CacheStaleness_Stale_Description_Casual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Stale_Description_Casual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cache may contain resources which are no longer being loaded because they are no longer the victors of override conflicts or their mods have been replaced or removed..
        /// </summary>
        internal static string Scan_CacheStaleness_Stale_Description_NonCasual {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Stale_Description_NonCasual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Umm, not clearing the cache files when they may have old junk hanging around in them can cause weird problems. Disabling this scan will make this warning go away, but it won&apos;t protect you from those problems..
        /// </summary>
        internal static string Scan_CacheStaleness_Stale_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_CacheStaleness_Stale_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  by {0}.
        /// </summary>
        internal static string Scan_Common_ByLine {
            get {
                return ResourceManager.GetString("Scan_Common_ByLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boy, did that *not* work. Your computer&apos;s operating system said:&lt;br /&gt;
        ///`{0}: {1}`.
        /// </summary>
        internal static string Scan_Common_Error_CannotMove {
            get {
                return ResourceManager.GetString("Scan_Common_Error_CannotMove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me the file for {0}.
        /// </summary>
        internal static string Scan_Common_ShowMeTheFile_Label {
            get {
                return ResourceManager.GetString("Scan_Common_ShowMeTheFile_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the mod.
        /// </summary>
        internal static string Scan_Common_ShowMeTheFile_Label_ModNameFallback {
            get {
                return ResourceManager.GetString("Scan_Common_ShowMeTheFile_Label_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable this scan?.
        /// </summary>
        internal static string Scan_Common_StopTellingMe_CautionCaption {
            get {
                return ResourceManager.GetString("Scan_Common_StopTellingMe_CautionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop telling me.
        /// </summary>
        internal static string Scan_Common_StopTellingMe_Label {
            get {
                return ResourceManager.GetString("Scan_Common_StopTellingMe_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod File is Corrupt: {0}.
        /// </summary>
        internal static string Scan_Corrupt_Found_Caption {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Found_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move it to the Downloads folder.
        /// </summary>
        internal static string Scan_Corrupt_Found_Move_Label {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Found_Move_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I understand that this might be annoying, but this file is *really* no good. And turning this scan off doesn&apos;t change that. If you don&apos;t believe me, just trying launching your game right now. You&apos;re in for a rude surprise..
        /// </summary>
        internal static string Scan_Corrupt_Found_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Found_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the file done wandered off..
        /// </summary>
        internal static string Scan_Corrupt_MoveToDownloads_Error_CannotFind {
            get {
                return ResourceManager.GetString("Scan_Corrupt_MoveToDownloads_Error_CannotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, the file has been safely moved to its new home in your Downloads folder and is called &lt;strong&gt;{0}&lt;/strong&gt; there..
        /// </summary>
        internal static string Scan_Corrupt_MoveToDownloads_Success {
            get {
                return ResourceManager.GetString("Scan_Corrupt_MoveToDownloads_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this corrupt package file in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///Your game is not going to be able to start with this file here. Let&apos;s move it to your Downloads folder, safely out of the game&apos;s reach..
        /// </summary>
        internal static string Scan_Corrupt_Package_Found_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Package_Found_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this corrupt package file in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///Thankfully, its also at an invalid depth for the game to find it. Still though, it&apos;s a time bomb waiting to go off. Let&apos;s move it to your Downloads folder, safely out of the game&apos;s reach..
        /// </summary>
        internal static string Scan_Corrupt_Package_FoundOutOfRange_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Package_FoundOutOfRange_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Packages are Corrupt.
        /// </summary>
        internal static string Scan_Corrupt_Package_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Package_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any corrupt package files in your Mods folder. That&apos;s good because if I did, the game would crash if it found them..
        /// </summary>
        internal static string Scan_Corrupt_Package_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Package_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the file done wandered off..
        /// </summary>
        internal static string Scan_Corrupt_ShowFile_Error_NotFound {
            get {
                return ResourceManager.GetString("Scan_Corrupt_ShowFile_Error_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this corrupt script archive in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///Your game is not going to be able to start with this file here. Let&apos;s move it to your Downloads folder, safely out of the game&apos;s reach..
        /// </summary>
        internal static string Scan_Corrupt_Ts4Script_Found_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Ts4Script_Found_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this corrupt script archive in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///Thankfully, its also at an invalid depth for the game to find it. Still though, it&apos;s a time bomb waiting to go off. Let&apos;s move it to your Downloads folder, safely out of the game&apos;s reach..
        /// </summary>
        internal static string Scan_Corrupt_Ts4Script_FoundOutOfRange_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Ts4Script_FoundOutOfRange_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Script Archives are Corrupt.
        /// </summary>
        internal static string Scan_Corrupt_Ts4Script_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Ts4Script_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any corrupt script archives in your Mods folder. That&apos;s good because if I did, the game would crash if it found them..
        /// </summary>
        internal static string Scan_Corrupt_Ts4Script_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_Corrupt_Ts4Script_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod Needs Another Mod Installed.
        /// </summary>
        internal static string Scan_Dependency_BrokenFile_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_BrokenFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve found {0} in your Mods folder ({modWithMissingDependencyMod.FilePaths.Select(filePath =&gt; $&quot;`{filePath}`&quot;).Humanize()}) needing another mod installed... and I can&apos;t find it. Unfortunately, I don&apos;t even know its name and have no idea where to even send you to download a fresh copy of either. 😱.
        /// </summary>
        internal static string Scan_Dependency_BrokenFile_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_BrokenFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some Mods Need {0} Installed.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDependency_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDependency_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve found {0} in your Mods folder ({1}) needing **{2}**{3} installed, and unfortunately... I can&apos;t find it. 🤷.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDependency_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDependency_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Download {0}.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDependency_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDependency_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod Needs Another Mod Installed.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDownload_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDownload_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve found {0} in your Mods folder ({1}) needing another mod installed. I&apos;m sorry that I can&apos;t tell you what either of these mods is called, but I can assure you that this is a problem. 😭.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDownload_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDownload_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Download the Needed Mod.
        /// </summary>
        internal static string Scan_Dependency_FileNeedsDownload_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNeedsDownload_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to file.
        /// </summary>
        internal static string Scan_Dependency_FileNoun_LowerCase {
            get {
                return ResourceManager.GetString("Scan_Dependency_FileNoun_LowerCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is Missing a File.
        /// </summary>
        internal static string Scan_Dependency_IdenticallyNamed_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_IdenticallyNamed_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have **{0}**{1} installed ({2}), and it seems one of its files specified as necessary is not in your Mods folder. 🤷.
        /// </summary>
        internal static string Scan_Dependency_IdenticallyNamed_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_IdenticallyNamed_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Re-download {0}.
        /// </summary>
        internal static string Scan_Dependency_IdenticallyNamed_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_IdenticallyNamed_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is Incompatible with {1}.
        /// </summary>
        internal static string Scan_Dependency_IncompatiblePack_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_IncompatiblePack_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **{0}** is incompatible with **{1}**, purchasable downloadable content for The Sims 4 from Electronic Arts which you have installed..
        /// </summary>
        internal static string Scan_Dependency_IncompatiblePack_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_IncompatiblePack_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help me Disable or Remove Packs.
        /// </summary>
        internal static string Scan_Dependency_IncompatiblePack_HelpMeDisable_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_IncompatiblePack_HelpMeDisable_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can tell you when a required mod is missing and... you&apos;re annoyed? Alrighty then, you do you..
        /// </summary>
        internal static string Scan_Dependency_IncompatiblePack_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Dependency_IncompatiblePack_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can tell you when a required mod is missing and... you&apos;re annoyed? Alrighty then, you do you..
        /// </summary>
        internal static string Scan_Dependency_MissingMod_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Dependency_MissingMod_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod.
        /// </summary>
        internal static string Scan_Dependency_ModNameFallback {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a mod.
        /// </summary>
        internal static string Scan_Dependency_ModNameFallback_LowerCase {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNameFallback_LowerCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Needs Another Mod Installed.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsDownload_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsDownload_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have **{0}**{1} installed ({2}), which requires that you also have another mod installed. I&apos;m sorry that I can&apos;t tell you what that other mod is called but I can assure you of one thing... I can&apos;t find it. 🤷.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsDownload_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsDownload_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Download the Other Mod.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsDownload_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsDownload_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Needs {1} Installed.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsMod_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsMod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have **{0}**{1} installed ({2}), which requires that you also have **{3}**{4} installed, and unfortunately... I can&apos;t find it. 🤷.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsMod_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsMod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Download {0}.
        /// </summary>
        internal static string Scan_Dependency_ModNeedsMod_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_ModNeedsMod_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pack.
        /// </summary>
        internal static string Scan_Dependency_PackNoun {
            get {
                return ResourceManager.GetString("Scan_Dependency_PackNoun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod Needs Another Mod Installed.
        /// </summary>
        internal static string Scan_Dependency_ReinstallFile_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve found {0} in your Mods folder ((1}) needing another mod installed... and I can&apos;t find it. Unfortunately, I don&apos;t even know its name, but I *do know* you need to re-download the original mod before this gets bad. 😨.
        /// </summary>
        internal static string Scan_Dependency_ReinstallFile_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Re-download {0}.
        /// </summary>
        internal static string Scan_Dependency_ReinstallFile_Download_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallFile_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Needs Another Mod Installed.
        /// </summary>
        internal static string Scan_Dependency_ReinstallMod_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallMod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have **{0}**{1} installed ({2}), which requires that you also have another mod installed... and I can&apos;t find it. Unfortunately, I don&apos;t even know its name, but I *do know* **{0}** needs you to return to its web site to see if you can find this other mod it&apos;s missing. 😓.
        /// </summary>
        internal static string Scan_Dependency_ReinstallMod_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallMod_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Re-download {0}.
        /// </summary>
        internal static string Scan_Dependency_ReinstallMod_Redownload_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_ReinstallMod_Redownload_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is Missing {1}.
        /// </summary>
        internal static string Scan_Dependency_RequiredPack_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_RequiredPack_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **{0}** requires **{1}**. When a mod requires a pack, you need to either remove the mod or install the missing pack. Packs are purchasable downloadable content for The Sims 4 from Electronic Arts.&lt;br /&gt;
        ///*If you believe you purchased this content already, you may want to check for any The Sims 4 DLC you may have available for download in {2}*..
        /// </summary>
        internal static string Scan_Dependency_RequiredPack_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_RequiredPack_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help me Purchase {0}.
        /// </summary>
        internal static string Scan_Dependency_RequiredPack_HelpMePurchase_Label {
            get {
                return ResourceManager.GetString("Scan_Dependency_RequiredPack_HelpMePurchase_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can tell you when a required mod is missing and... you&apos;re annoyed? Alrighty then, you do you..
        /// </summary>
        internal static string Scan_Dependency_RequiredPack_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Dependency_RequiredPack_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} has an Unmet Requirement.
        /// </summary>
        internal static string Scan_Dependency_UnmetRequirement_Caption {
            get {
                return ResourceManager.GetString("Scan_Dependency_UnmetRequirement_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have **{0}**{1} installed ({2}) which has an unmet requirement which it calls &quot;{3}&quot;. {4}.
        /// </summary>
        internal static string Scan_Dependency_UnmetRequirement_Description {
            get {
                return ResourceManager.GetString("Scan_Dependency_UnmetRequirement_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to But, you know, it&apos;s kinda chill. It says you can actually meet the requirement in more than one way. What do you want to do? 🤷.
        /// </summary>
        internal static string Scan_Dependency_UnmetRequirement_Description_CauseAlternative {
            get {
                return ResourceManager.GetString("Scan_Dependency_UnmetRequirement_Description_CauseAlternative", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since all your options here involve going to the same website, I&apos;m guessing maybe you forgot to pick and install a multiple-choice package for &quot;{0}&quot; from the original download when setting this up..
        /// </summary>
        internal static string Scan_Dependency_UnmetRequirement_Description_CauseMissingComponent {
            get {
                return ResourceManager.GetString("Scan_Dependency_UnmetRequirement_Description_CauseMissingComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can tell you when a required mod is missing and... you&apos;re annoyed? Alrighty then, you do you..
        /// </summary>
        internal static string Scan_Dependency_UnmetRequirement_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Dependency_UnmetRequirement_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the file done wandered off..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Error_CannotFind {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Error_CannotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hmm. I was unable to locate the folder this file is in... for some reason. Given that, I feel uncomfortable trying to move it..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Error_CannotFindFolder {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Error_CannotFindFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the game is currently using the Mods folder. You&apos;ll need to close the game first..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Error_GameIsRunning {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Error_GameIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I want to move &lt;strong&gt;{0}&lt;/strong&gt; to &lt;strong&gt;{1}&lt;/strong&gt; in order for it to work properly.
        ///That also means moving everything that&apos;s in the same folder so I don&apos;t break anything.
        ///But, unfortunately, that would cause me to overwrite the following files or folders which already exist at the destination:
        ///&lt;br /&gt;
        ///&lt;br /&gt;
        ///&lt;ul&gt;
        ///{2}
        ///&lt;/ul&gt;
        ///&lt;br /&gt;
        ///I don&apos;t want to accidentally cause you to lose important files! You may need to sort this out for yourself. I&apos;m sorry..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Error_OverwriteGuard {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Error_OverwriteGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I don&apos;t know how, but I sort of... ran out of folders figuring out where to move this mod. I think you&apos;re going to have to work this out on your own..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Error_WalkedBelowRoot {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Error_WalkedBelowRoot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You got it, Chief. The file (and any of its pals) has been safely moved to a new home closer to the root of your Mods folder where the game shouldn&apos;t have any trouble with it..
        /// </summary>
        internal static string Scan_Depth_MoveCloserToModsRoot_Success {
            get {
                return ResourceManager.GetString("Scan_Depth_MoveCloserToModsRoot_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Packages are Too Deep.
        /// </summary>
        internal static string Scan_Depth_Package_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_Depth_Package_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any package files more than five folders deep in your Mods folder. That&apos;s good because if I did, I can assure you the game would not have..
        /// </summary>
        internal static string Scan_Depth_Package_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_Depth_Package_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this package file too deep in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///We need to move it closer to the root of your Mods folder so the game can find it..
        /// </summary>
        internal static string Scan_Depth_Package_TooDeep_Description {
            get {
                return ResourceManager.GetString("Scan_Depth_Package_TooDeep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me this package.
        /// </summary>
        internal static string Scan_Depth_Package_TooDeep_ShowMe_Label {
            get {
                return ResourceManager.GetString("Scan_Depth_Package_TooDeep_ShowMe_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Mod File is Too Deep: {0}.
        /// </summary>
        internal static string Scan_Depth_TooDeep_Caption {
            get {
                return ResourceManager.GetString("Scan_Depth_TooDeep_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move it closer to the root of my Mods folder.
        /// </summary>
        internal static string Scan_Depth_TooDeep_MoveCloserToModsRoot_Label {
            get {
                return ResourceManager.GetString("Scan_Depth_TooDeep_MoveCloserToModsRoot_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I understand that this might be annoying, but the game has its limitations. And turning this scan off doesn&apos;t change that. All it will do is hide this warning..
        /// </summary>
        internal static string Scan_Depth_TooDeep_StopTellingMe_CautionCaption {
            get {
                return ResourceManager.GetString("Scan_Depth_TooDeep_StopTellingMe_CautionCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Script Archives are Too Deep.
        /// </summary>
        internal static string Scan_Depth_Ts4Script_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_Depth_Ts4Script_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any script archives more than one folder deep in your Mods folder. That&apos;s good because if I did, I can assure you the game would not have..
        /// </summary>
        internal static string Scan_Depth_Ts4Script_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_Depth_Ts4Script_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this script archive too deep in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///We need to move it closer to the root of your Mods folder so the game can find it..
        /// </summary>
        internal static string Scan_Depth_Ts4Script_TooDeep_Description {
            get {
                return ResourceManager.GetString("Scan_Depth_Ts4Script_TooDeep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me this script archive.
        /// </summary>
        internal static string Scan_Depth_Ts4Script_TooDeep_ShowMe_Label {
            get {
                return ResourceManager.GetString("Scan_Depth_Ts4Script_TooDeep_ShowMe_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure?.
        /// </summary>
        internal static string Scan_ErrorLog_Delete_Caution_Caption {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_Delete_Caution_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This file may contain important information about a problem with your Sims 4 setup, and it might even contain something critical which would help others, too. Once I delete it, all that potential will be gone forever..
        /// </summary>
        internal static string Scan_ErrorLog_Delete_Caution_Text {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_Delete_Caution_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoops, that file has run off....
        /// </summary>
        internal static string Scan_ErrorLog_Delete_Failure_Caption {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_Delete_Failure_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m sorry, but it&apos;s just not there any more. I&apos;m gonna go ahead and refresh this screen for you..
        /// </summary>
        internal static string Scan_ErrorLog_Delete_Failure_Text {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_Delete_Failure_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Game or one of Your Mods is Calling for Help!.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_Caption_Casual {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_Caption_Casual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A File Likely Containing an Error Has Been Found.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_Caption_NonCasual {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_Caption_NonCasual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete error files.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_Delete_Label {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_Delete_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Sims 4 Support Venue.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_SelectSupportDiscord_Label {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_SelectSupportDiscord_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me this file.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_ShowFile_Label {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_ShowFile_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;re experiencing trepidation about confronting this file or speaking with strangers about it, I understand. But if you tell me to choose a Discord, I&apos;ll be here with you the whole time to help you through the process. Disabling this scan will just hide the problem; it won&apos;t solve it..
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this file in your User Data folder and its presence is a signal that something went wrong.&lt;br /&gt;
        ///`{0}`&lt;br /&gt;
        ///We could take the file to informed people in Discord who can help us figure out what it means and if there&apos;s anything we should do about it..
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_Text_Casual {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_Text_Casual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A file which is likely an exception log or technical report triggered by an error was found at the following path in your User Data folder:&lt;br /&gt;
        ///`{0}`.
        /// </summary>
        internal static string Scan_ErrorLog_FileFound_Text_NonCasual {
            get {
                return ResourceManager.GetString("Scan_ErrorLog_FileFound_Text_NonCasual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Multiple Mods Claim &quot;{0}&quot;.
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_Caption {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;{0}&quot; is a special thing that only one mod file in your Mods folder can do or have *for things to work correctly*, and unfortunately, you&apos;ve installed multiple mods trying to claim it. It would be best to remove all but one of the whole mods these mod files are a part of, although you may want to review the **Catalog** to see what other mods are dependents of them to make an informed decision.&lt;br /&gt;
        ///*Note: Some mods may be listed as dependents of two or more of these mods in this exclusivity conflict. This [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_Description {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * **{0}**{1} located at {2}.
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_Description_ListItem {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_Description_ListItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some Mod.
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_Description_ModNameFallback {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_Description_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me the {0} file.
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_ShowFile_Label {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_ShowFile_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can tell you when you have conflicting mods installed and... you&apos;re just disinterested? Disable this scan all you want... won&apos;t fix the problem, though..
        /// </summary>
        internal static string Scan_Exclusivity_ConflicingClaim_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Exclusivity_ConflicingClaim_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Found a 7-Zip File: {0}.
        /// </summary>
        internal static string Scan_LooseArchive_7Zip_Found_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_7Zip_Found_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this 7-Zip file in your Mods folder, specifically at this path:
        ///`{fileOfInterest.Path}`&lt;br /&gt;
        ///While it&apos;s not *technically* causing a problem, it makes me uncomfortable since it can&apos;t be used by the game in there and it could trick you into thinking you&apos;ve installed a mod when you really haven&apos;t..
        /// </summary>
        internal static string Scan_LooseArchive_7Zip_Found_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_7Zip_Found_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No 7-Zip Files.
        /// </summary>
        internal static string Scan_LooseArchive_7Zip_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_7Zip_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any 7-Zip files in your Mods folder, which is a good thing. It&apos;s best to keep them out of there!.
        /// </summary>
        internal static string Scan_LooseArchive_7Zip_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_7Zip_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I mean, I get that this is nit picky, but it&apos;s bad Mods folder hygiene to have that 7-Zip file in there. And turning off this scan is just hiding this warning about it, not addressing the root cause..
        /// </summary>
        internal static string Scan_LooseArchive_7Zip_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_7Zip_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the file done wandered off..
        /// </summary>
        internal static string Scan_LooseArchive_MoveToDownloads_Error_CannotFind {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_MoveToDownloads_Error_CannotFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move it to the Downloads folder.
        /// </summary>
        internal static string Scan_LooseArchive_MoveToDownloads_Label {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_MoveToDownloads_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Okay, the file has been safely moved to its new home in your Downloads folder and is called &lt;strong&gt;{0}&lt;/strong&gt; there..
        /// </summary>
        internal static string Scan_LooseArchive_MoveToDownloads_Success {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_MoveToDownloads_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Found a RAR File: {0}.
        /// </summary>
        internal static string Scan_LooseArchive_Rar_Found_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Rar_Found_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this RAR file in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///While it&apos;s not *technically* causing a problem, it makes me uncomfortable since it can&apos;t be used by the game in there and it could trick you into thinking you&apos;ve installed a mod when you really haven&apos;t..
        /// </summary>
        internal static string Scan_LooseArchive_Rar_Found_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Rar_Found_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No RAR Files.
        /// </summary>
        internal static string Scan_LooseArchive_Rar_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Rar_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any RAR files in your Mods folder, which is a good thing. It&apos;s best to keep them out of there!.
        /// </summary>
        internal static string Scan_LooseArchive_Rar_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Rar_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I mean, I get that this is nit picky, but it&apos;s bad Mods folder hygiene to have that RAR file in there. And turning off this scan is just hiding this warning about it, not addressing the root cause..
        /// </summary>
        internal static string Scan_LooseArchive_Rar_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Rar_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Found a ZIP File: {0}.
        /// </summary>
        internal static string Scan_LooseArchive_Zip_Found_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Zip_Found_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I found this ZIP file in your Mods folder, specifically at this path:
        ///`{0}`&lt;br /&gt;
        ///You may believe that it&apos;s not *technically* causing a problem, but it has been reported that deprecated code paths in the game may attempt to open this file, which would be &lt;strong&gt;very bad&lt;/strong&gt;. Let&apos;s move it to your Downloads folder right away..
        /// </summary>
        internal static string Scan_LooseArchive_Zip_Found_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Zip_Found_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No ZIP Files.
        /// </summary>
        internal static string Scan_LooseArchive_Zip_NoneFound_Caption {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Zip_NoneFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I didn&apos;t find any ZIP files in your Mods folder, which is a good thing. It&apos;s best to keep them out of there!.
        /// </summary>
        internal static string Scan_LooseArchive_Zip_NoneFound_Description {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Zip_NoneFound_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Look, this ZIP file being in your Mods folder can&apos;t do any good and it just might do harm. Turning off this scan is just hiding this warning about it, not prevent that potential harm..
        /// </summary>
        internal static string Scan_LooseArchive_Zip_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_LooseArchive_Zip_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is Installed.
        /// </summary>
        internal static string Scan_Missing_Installed_Caption {
            get {
                return ResourceManager.GetString("Scan_Missing_Installed_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enjoy the awesome improvements to {0}. 😁.
        /// </summary>
        internal static string Scan_Missing_Installed_Description {
            get {
                return ResourceManager.GetString("Scan_Missing_Installed_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} May Not Load.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Caption {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Because the **{0}** scan is disabled, I can&apos;t be sure {1} would be loaded if *you did* have it installed. Therefore, we need to turn that scan back on..
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Description {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable {0} Scan.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_EnableScan_Label {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_EnableScan_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Game Option.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Scan_ModsGameOption {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Scan_ModsGameOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `.package` Depth Scan.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Scan_PackageDepthScan {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Scan_PackageDepthScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Mods Game Option.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Scan_ScriptModsGameOption {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Scan_ScriptModsGameOption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `.ts4script` Depth Scan.
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_Scan_Ts4ScriptDepthScan {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_Scan_Ts4ScriptDepthScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} can be quite helpful with {1}. Turning off this scan will prevent me from getting on your case about not having it, but... you know... you may not have it..
        /// </summary>
        internal static string Scan_Missing_MayNotLoad_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Missing_MayNotLoad_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is Missing.
        /// </summary>
        internal static string Scan_Missing_Missing_Caption {
            get {
                return ResourceManager.GetString("Scan_Missing_Missing_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You should totally go get it, though, because it does a great deal to improve {0}..
        /// </summary>
        internal static string Scan_Missing_Missing_Description {
            get {
                return ResourceManager.GetString("Scan_Missing_Missing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go Get {0}.
        /// </summary>
        internal static string Scan_Missing_Missing_GoGet_Label {
            get {
                return ResourceManager.GetString("Scan_Missing_Missing_GoGet_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Turning off this scan will prevent me from getting on your case about not having {0}, but... you know... you will still miss out on the awesome improvements it makes to {1}..
        /// </summary>
        internal static string Scan_Missing_Missing_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Missing_Missing_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Better Exceptions.
        /// </summary>
        internal static string Scan_Missing_ModName_BetterExceptions {
            get {
                return ResourceManager.GetString("Scan_Missing_ModName_BetterExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MC Command Center.
        /// </summary>
        internal static string Scan_Missing_ModName_MCCommandCenter {
            get {
                return ResourceManager.GetString("Scan_Missing_ModName_MCCommandCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ModGuard.
        /// </summary>
        internal static string Scan_Missing_ModName_ModGuard {
            get {
                return ResourceManager.GetString("Scan_Missing_ModName_ModGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to detailed exception, mod conflict, and patch day analyses.
        /// </summary>
        internal static string Scan_Missing_Utility_BetterExceptions {
            get {
                return ResourceManager.GetString("Scan_Missing_Utility_BetterExceptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to your Sims 4 game experience, NPC story progression options, and error logging.
        /// </summary>
        internal static string Scan_Missing_Utility_MCCommandCenter {
            get {
                return ResourceManager.GetString("Scan_Missing_Utility_MCCommandCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to protection from hacking, phishing, and other malware attacks which may occur if a modder&apos;s online accounts are compromised.
        /// </summary>
        internal static string Scan_Missing_Utility_ModGuard {
            get {
                return ResourceManager.GetString("Scan_Missing_Utility_ModGuard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Found Multiple Versions of {0} Installed.
        /// </summary>
        internal static string Scan_MultipleModVersions_Caption {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the Same Mod.
        /// </summary>
        internal static string Scan_MultipleModVersions_Caption_ModNameFallback {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Caption_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I don&apos;t mean to be pushy, but you need to remove all but one of these.&lt;br /&gt;&lt;br /&gt;
        ///{0}.
        /// </summary>
        internal static string Scan_MultipleModVersions_Description {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to * **{0}**{1}{2} located at {3}.
        /// </summary>
        internal static string Scan_MultipleModVersions_Description_ListItem {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Description_ListItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  by {0}.
        /// </summary>
        internal static string Scan_MultipleModVersions_Description_ListItem_ByLineFormat {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Description_ListItem_ByLineFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some Mod.
        /// </summary>
        internal static string Scan_MultipleModVersions_Description_ListItem_ModNameFallback {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Description_ListItem_ModNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  ({0}).
        /// </summary>
        internal static string Scan_MultipleModVersions_Description_ListItem_VersionFormat {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Description_ListItem_VersionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to the Download Page{0}.
        /// </summary>
        internal static string Scan_MultipleModVersions_Download_Label {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Download_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  for {0}.
        /// </summary>
        internal static string Scan_MultipleModVersions_Download_Label_ModNameFormat {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_Download_Label_ModNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Go to the Download Page for the {0} version.
        /// </summary>
        internal static string Scan_MultipleModVersions_DownloadOneOfMultiple_Label {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_DownloadOneOfMultiple_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me the {0} file.
        /// </summary>
        internal static string Scan_MultipleModVersions_ShowOneOfMultiple_Label {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_ShowOneOfMultiple_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to So the creators went to all this trouble to embed metadata so that I can do all this complex hash set calculation to know when you&apos;ve installed the same thing and twice *and will have problems as a result*... and you can&apos;t be bothered?.
        /// </summary>
        internal static string Scan_MultipleModVersions_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_MultipleModVersions_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because the game is currently running. You need to close it and check back here..
        /// </summary>
        internal static string Scan_Setting_Fix_Error_GameIsRunning {
            get {
                return ResourceManager.GetString("Scan_Setting_Fix_Error_GameIsRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I couldn&apos;t do that because your Game Options file is missing. You need to launch the game, close it, and check back here..
        /// </summary>
        internal static string Scan_Setting_Fix_Error_OptionsMissing {
            get {
                return ResourceManager.GetString("Scan_Setting_Fix_Error_OptionsMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I have changed your Game Options for you at your request..
        /// </summary>
        internal static string Scan_Setting_Fix_Success {
            get {
                return ResourceManager.GetString("Scan_Setting_Fix_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the box for me.
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_Correct_Label {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_Correct_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods are Disabled in Options.
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_Incorrect_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_Incorrect_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have mod packages installed, but the **Enable Custom Content and Mods** box is unchecked in **Game Options**..
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_Incorrect_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_Incorrect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mods Game Option is Fine.
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_Okay_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_Okay_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The **Enable Custom Content and Mods** box in **Game Options** isn&apos;t causing any problems at all at the moment..
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_Okay_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_Okay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your custom content and mods will not work at all without this Game Option enabled, whether or not I am running this scan. By telling me not to, you&apos;re just getting rid of this warning, not fixing the problem..
        /// </summary>
        internal static string Scan_Setting_ModsGameOption_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Setting_ModsGameOption_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check the boxes for me.
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_Correct_Label {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_Correct_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Mods are Disabled in Options.
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_Incorrect_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_Incorrect_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have script archives installed, but either the **Enable Custom Content and Mods** box or the **Script Mods Allowed** box (or both) is unchecked in **Game Options**..
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_Incorrect_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_Incorrect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script Mods Game Option is Fine.
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_Okay_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_Okay_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The **Script Mods Allowed** box in **Game Options** isn&apos;t causing any problems at all at the moment..
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_Okay_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_Okay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your script mods will not work at all without these Game Options enabled, whether or not I am running this scan. By telling me not to, you&apos;re just getting rid of this warning, not fixing the problem..
        /// </summary>
        internal static string Scan_Setting_ScriptModsGameOption_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Setting_ScriptModsGameOption_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncheck the box for me.
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_Correct_Label {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_Correct_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Mod List is Enabled in Options.
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_Incorrect_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_Incorrect_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You have mod packages installed and the **Show At Startup** box inside the **View Custom Content** button in **Game Options** is checked. This can make your game load very slowly, especially on older computers or those with hard disk drives..
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_Incorrect_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_Incorrect_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Mod List Option is Fine.
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_Okay_Caption {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_Okay_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Either you have no mods or the **Show At Startup** box inside the **View Custom Content** button in **Game Options** is not checked, which means your game isn&apos;t loading slowly just to open that list when you launch it. That&apos;s great. Any time you want to see your mods, just click the convenient button on the top of my window to open your Mods folder right up..
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_Okay_Description {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_Okay_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can just open your mods folder and look at the mods you have with the convenient button right on the top of my window, so you really don&apos;t need the game doing this. Disabling this scan won&apos;t cause your game to load any faster..
        /// </summary>
        internal static string Scan_Setting_ShowModsListGameOption_StopTellingMe_CautionText {
            get {
                return ResourceManager.GetString("Scan_Setting_ShowModsListGameOption_StopTellingMe_CautionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Game&apos;s Running... So Sleepy....
        /// </summary>
        internal static string ScanIssuesDisplay_MDCAsleep_Caption {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCAsleep_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Since we shouldn&apos;t be doing anything to your Mods folder while the game is running, I hope you won&apos;t mind if I catch a few winks while you play..
        /// </summary>
        internal static string ScanIssuesDisplay_MDCAsleep_Description {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCAsleep_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;m Looking at Your Mods Folder....
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Caption {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Once I&apos;m done I&apos;ll let you know if there&apos;s anything to be concerned about. Don&apos;t worry, anything important will be at the top of the list!.
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Description {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please don&apos;t launch the game right now!.
        /// </summary>
        internal static string ScanIssuesDisplay_MDCRefreshing_Warning {
            get {
                return ResourceManager.GetString("ScanIssuesDisplay_MDCRefreshing_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...it is appropriate to clear the cache files.
        /// </summary>
        internal static string ScansToggler_ScanForCacheStaleness_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForCacheStaleness_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a corrupt .package file.
        /// </summary>
        internal static string ScansToggler_ScanForCorruptMods_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForCorruptMods_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a corrupt .ts4script file.
        /// </summary>
        internal static string ScansToggler_ScanForCorruptScriptMods_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForCorruptScriptMods_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a file that appears to contain error information.
        /// </summary>
        internal static string ScansToggler_ScanForErrorLogs_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForErrorLogs_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a .package file more than five subfolders deep.
        /// </summary>
        internal static string ScansToggler_ScanForInvalidModSubdirectoryDepth_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForInvalidModSubdirectoryDepth_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a .ts4script file more than one subfolder deep.
        /// </summary>
        internal static string ScansToggler_ScanForInvalidScriptModSubdirectoryDepth_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForInvalidScriptModSubdirectoryDepth_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a .7z file.
        /// </summary>
        internal static string ScansToggler_ScanForLoose7ZipArchives_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForLoose7ZipArchives_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a .rar file.
        /// </summary>
        internal static string ScansToggler_ScanForLooseRarArchives_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForLooseRarArchives_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a .zip file.
        /// </summary>
        internal static string ScansToggler_ScanForLooseZipArchives_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForLooseZipArchives_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...TwistedMexi&apos;s Better Exceptions.
        /// </summary>
        internal static string ScansToggler_ScanForMissingBe_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMissingBe_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...a pack or mod required by another mod you have installed.
        /// </summary>
        internal static string ScansToggler_ScanForMissingDependency_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMissingDependency_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...Deaderpool&apos;s MC Command Center.
        /// </summary>
        internal static string ScansToggler_ScanForMissingMccc_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMissingMccc_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...TwistedMexi&apos;s Mod Guard.
        /// </summary>
        internal static string ScansToggler_ScanForMissingModGuard_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMissingModGuard_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...Mods are disabled even though you have .package files.
        /// </summary>
        internal static string ScansToggler_ScanForModsDisabled_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForModsDisabled_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...multiple versions of the same mod.
        /// </summary>
        internal static string ScansToggler_ScanForMultipleModVersions_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMultipleModVersions_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...one or more mutually-exclusive mods.
        /// </summary>
        internal static string ScansToggler_ScanForMutuallyExclusiveMods_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForMutuallyExclusiveMods_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...Script Mods are disabled even though you have .ts4script files.
        /// </summary>
        internal static string ScansToggler_ScanForScriptModsDisabled_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForScriptModsDisabled_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ...Show At Startup is enabled in View Custom Content.
        /// </summary>
        internal static string ScansToggler_ScanForShowModsListAtStartupEnabled_Label {
            get {
                return ResourceManager.GetString("ScansToggler_ScanForShowModsListAtStartupEnabled_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod file analysis suggests....
        /// </summary>
        internal static string ScansToggler_SelectedAnalysisScans_Label {
            get {
                return ResourceManager.GetString("ScansToggler_SelectedAnalysisScans_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inside your Mods Folder, I find....
        /// </summary>
        internal static string ScansToggler_SelectedFoundScans_Label {
            get {
                return ResourceManager.GetString("ScansToggler_SelectedFoundScans_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In The Sims 4 game options....
        /// </summary>
        internal static string ScansToggler_SelectedGameOptionScans_Label {
            get {
                return ResourceManager.GetString("ScansToggler_SelectedGameOptionScans_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inside your Installation and Mods Folders, I DO NOT find....
        /// </summary>
        internal static string ScansToggler_SelectedNotFoundScans_Label {
            get {
                return ResourceManager.GetString("ScansToggler_SelectedNotFoundScans_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select {0} Features.
        /// </summary>
        internal static string SelectFeaturesDialog_Caption {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod.
        /// </summary>
        internal static string SelectFeaturesDialog_Caption_FallbackModName {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Caption_FallbackModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proceeding with No Required Features.
        /// </summary>
        internal static string SelectFeaturesDialog_Caution_NoRequiredFeatures_Caption {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Caution_NoRequiredFeatures_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You didn&apos;t move any available features to the required section. If this was a mistake, click Cancel and you can do so..
        /// </summary>
        internal static string SelectFeaturesDialog_Caution_NoRequiredFeatures_Text {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Caution_NoRequiredFeatures_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Features My Mod Needs.
        /// </summary>
        internal static string SelectFeaturesDialog_EndTitle {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_EndTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;re having any trouble picking from this list, you may want to visit [the download page for (0)]({1}), which may have more information or links to it..
        /// </summary>
        internal static string SelectFeaturesDialog_Guidance {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Guidance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to the mod.
        /// </summary>
        internal static string SelectFeaturesDialog_Guidance_FallbackModName {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Guidance_FallbackModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available {0} Features.
        /// </summary>
        internal static string SelectFeaturesDialog_StartTitle {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_StartTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Required Mod.
        /// </summary>
        internal static string SelectFeaturesDialog_StartTitle_FallbackModName {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_StartTitle_FallbackModName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Amazing news!** {0} included a list of features that the mod offers, which means *you get to specify which ones you need!* This is great because it&apos;s giving me more details about what issues could arise if things change later on.&lt;br /&gt;
        ///Move available features on the left over to the required list on the right. What will you have? 😏&lt;br /&gt;
        ///&lt;iframe src=&quot;https://giphy.com/embed/x49H7NdakLhNgLoy7v&quot; width=&quot;480&quot; height=&quot;307&quot; style=&quot;&quot; frameBorder=&quot;0&quot; class=&quot;giphy-embed&quot; allowFullScreen&gt;&lt;/iframe&gt;&lt;p&gt;&lt;a href=&quot;htt [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SelectFeaturesDialog_Text {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This mod&apos;s creator.
        /// </summary>
        internal static string SelectFeaturesDialog_Text_ModCreatorNameFallback {
            get {
                return ResourceManager.GetString("SelectFeaturesDialog_Text_ModCreatorNameFallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Manifest.
        /// </summary>
        internal static string SelectManifestDialog_Caption {
            get {
                return ResourceManager.GetString("SelectManifestDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decimal Instance.
        /// </summary>
        internal static string SelectManifestDialog_DecimalInstance_Label {
            get {
                return ResourceManager.GetString("SelectManifestDialog_DecimalInstance_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash.
        /// </summary>
        internal static string SelectManifestDialog_Hash_Label {
            get {
                return ResourceManager.GetString("SelectManifestDialog_Hash_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource Key.
        /// </summary>
        internal static string SelectManifestDialog_ResourceKey_Label {
            get {
                return ResourceManager.GetString("SelectManifestDialog_ResourceKey_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tuning Resource Name.
        /// </summary>
        internal static string SelectManifestDialog_TuningResourceName_Label {
            get {
                return ResourceManager.GetString("SelectManifestDialog_TuningResourceName_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a Support Venue.
        /// </summary>
        internal static string SelectSupportDiscordDialog_Caption {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are the Community Support Venues I could find to help us with: `{0}`.
        /// </summary>
        internal static string SelectSupportDiscordDialog_Description_ErrorLog {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Description_ErrorLog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are the Community Support Venues prepared to offer general support..
        /// </summary>
        internal static string SelectSupportDiscordDialog_Description_General {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Description_General", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are the Community Support Venues which may offer support for this mod..
        /// </summary>
        internal static string SelectSupportDiscordDialog_Description_ModSpecific {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Description_ModSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Here are the Community Support Venues which announce mod updates..
        /// </summary>
        internal static string SelectSupportDiscordDialog_Description_ModUpdates {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Description_ModUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End the Guided Support Session.
        /// </summary>
        internal static string SelectSupportDiscordDialog_EndSession_Tip {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_EndSession_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get Help with PlumbBuddy.
        /// </summary>
        internal static string SelectSupportDiscordDialog_GetHelpWithMe_Label {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_GetHelpWithMe_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you&apos;re looking for help with me instead of with the game or with a mod, click here..
        /// </summary>
        internal static string SelectSupportDiscordDialog_GetHelpWithMe_Tip {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_GetHelpWithMe_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Whoops, sorry, I couldn&apos;t find any Community Support venues prepared to deal with this issue..
        /// </summary>
        internal static string SelectSupportDiscordDialog_NoAvailableOptions {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_NoAvailableOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pick this Support Venue.
        /// </summary>
        internal static string SelectSupportDiscordDialog_Pick_Label {
            get {
                return ResourceManager.GetString("SelectSupportDiscordDialog_Pick_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to General.
        /// </summary>
        internal static string SettingsDialog_General_Label {
            get {
                return ResourceManager.GetString("SettingsDialog_General_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Guided Support Session.
        /// </summary>
        internal static string SupportDiscordStepsDialog_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Already Clear.
        /// </summary>
        internal static string SupportDiscordStepsDialog_ClearCache_AlreadyClear_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_ClearCache_AlreadyClear_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Good on you for being thorough, though!.
        /// </summary>
        internal static string SupportDiscordStepsDialog_ClearCache_AlreadyClear_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_ClearCache_AlreadyClear_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear cache.
        /// </summary>
        internal static string SupportDiscordStepsDialog_ClearCache_Label {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_ClearCache_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Cache is Now Clear.
        /// </summary>
        internal static string SupportDiscordStepsDialog_ClearCache_Success_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_ClearCache_Success_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Well done, you now have a clean slate..
        /// </summary>
        internal static string SupportDiscordStepsDialog_ClearCache_Success_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_ClearCache_Success_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this switch to temporarily disable generation of the global manifest package. Don&apos;t worry if you forget to turn this back on if you had it on. I&apos;ll do that for you. 💖.
        /// </summary>
        internal static string SupportDiscordStepsDialog_GenerateGlobalManifestPackage_Tip {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_GenerateGlobalManifestPackage_Tip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me your most recent log file.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightAppLogs_Label {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightAppLogs_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Couldn&apos;t Find My Own App Data Directory.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightAppLogs_NoAppData_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightAppLogs_NoAppData_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Holy cow, how are you even getting to this error message?.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightAppLogs_NoAppData_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightAppLogs_NoAppData_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Couldn&apos;t Find My Most Recent Log File.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightAppLogs_NoLogFile_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightAppLogs_NoLogFile_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to That uhh... shouldn&apos;t be a thing. So sorry..
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightAppLogs_NoLogFile_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightAppLogs_NoLogFile_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me the error file.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightErrorLog_Label {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightErrorLog_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Couldn&apos;t Find Your Error File.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightErrorLog_NotFound_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightErrorLog_NotFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Something must have happened to it, I&apos;m so sorry..
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightErrorLog_NotFound_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightErrorLog_NotFound_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show me my game version file.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightGameVersion_Label {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightGameVersion_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I Couldn&apos;t Find Your Game Version File.
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightGameVersion_NotFound_Caption {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightGameVersion_NotFound_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It looks like you need to launch The Sims 4 so that it will write that file. Once you&apos;ve done that, come back here and click this button again..
        /// </summary>
        internal static string SupportDiscordStepsDialog_HighlightGameVersion_NotFound_Text {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_HighlightGameVersion_NotFound_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start over.
        /// </summary>
        internal static string SupportDiscordStepsDialog_StartOver_Label {
            get {
                return ResourceManager.GetString("SupportDiscordStepsDialog_StartOver_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dark Mode Only.
        /// </summary>
        internal static string ThemeSelector_DarkModeOnly {
            get {
                return ResourceManager.GetString("ThemeSelector_DarkModeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click &lt;span class=&quot;mud-primary-text&quot;&gt;&lt;strong&gt;SELECT&lt;/strong&gt;&lt;/span&gt; to choose a theme or &lt;span class=&quot;mud-primary-text&quot;&gt;&lt;strong&gt;SELECTED&lt;/strong&gt;&lt;/span&gt; for the current theme to return to the default..
        /// </summary>
        internal static string ThemeSelector_Instructions {
            get {
                return ResourceManager.GetString("ThemeSelector_Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light Mode Only.
        /// </summary>
        internal static string ThemeSelector_LightModeOnly {
            get {
                return ResourceManager.GetString("ThemeSelector_LightModeOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light or Dark Mode.
        /// </summary>
        internal static string ThemeSelector_LightOrDarkMode {
            get {
                return ResourceManager.GetString("ThemeSelector_LightOrDarkMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Sims 4.
        /// </summary>
        internal static string UserDataFolderName {
            get {
                return ResourceManager.GetString("UserDataFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I got PlumbBuddy because I want to play The Sims 4 with mods, but without any hassles. Don&apos;t bother me with a bunch of technical mumbo-jumbo. Just keep an eye on my mods, let me know when there&apos;s a problem, and give me an easy-to-follow way to fix it..
        /// </summary>
        internal static string UserTypeSelector_CasualPlayer_Description {
            get {
                return ResourceManager.GetString("UserTypeSelector_CasualPlayer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Casual Player.
        /// </summary>
        internal static string UserTypeSelector_CasualPlayer_Label {
            get {
                return ResourceManager.GetString("UserTypeSelector_CasualPlayer_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to I&apos;ve been using mods in The Sims 4 for some time and I got PlumbBuddy to help automate all the mod maintenance I need to do. I&apos;m comfortable with the technical stuff, so don&apos;t hold back. I want to see all the options, learn what they do, and exercise full control over them. I may have unusual preferences regarding how I want PlumbBuddy to behave..
        /// </summary>
        internal static string UserTypeSelector_EnthusiastPlayer_Description {
            get {
                return ResourceManager.GetString("UserTypeSelector_EnthusiastPlayer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enthusiast Player.
        /// </summary>
        internal static string UserTypeSelector_EnthusiastPlayer_Label {
            get {
                return ResourceManager.GetString("UserTypeSelector_EnthusiastPlayer_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hey, PlumbBuddy! You should probably just default all your health scans off for me unless I turn them on for myself. You and I both know I don&apos;t actually have time to play the game. 😂 Oh, and could you unlock your Creator Tools for me? I may need to update manifests in my packages..
        /// </summary>
        internal static string UserTypeSelector_ModCreator_Description {
            get {
                return ResourceManager.GetString("UserTypeSelector_ModCreator_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mod Creator.
        /// </summary>
        internal static string UserTypeSelector_ModCreator_Label {
            get {
                return ResourceManager.GetString("UserTypeSelector_ModCreator_Label", resourceCulture);
            }
        }
    }
}
